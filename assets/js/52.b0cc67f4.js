(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{590:function(e,t,r){"use strict";r.r(t);var o=r(8),n=Object(o.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"p2p-网络技术参考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#p2p-网络技术参考"}},[e._v("#")]),e._v(" P2P 网络技术参考")]),e._v(" "),r("p",[e._v("::: info")]),e._v(" "),r("p",[e._v("翻译自"),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("P2P Network"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v(":::")]),e._v(" "),r("p",[e._v("本节描述比特币 P2P 网络协议(但它不是一个规范)。它没有描述已经停止使用的 ip 到 ip 直接支付协议"),r("a",{attrs:{href:"https://en.bitcoin.it/wiki/IP_Transactions",target:"_blank",rel:"noopener noreferrer"}},[e._v("IP-to-IP payment protocol"),r("OutboundLink")],1),e._v(", 不推荐使用的 BIP70支付协议 "),r("a",{attrs:{href:"https://developer.bitcoin.org/glossary.html#term-Payment-protocol",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP70 payment protocol"),r("OutboundLink")],1),e._v("、不推荐使用的 BIP70支付协议"),r("a",{attrs:{href:"https://developer.bitcoin.org/glossary.html#term-Payment-protocol",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP70 payment protocol"),r("OutboundLink")],1),e._v("、 GetBlockTemplate 挖掘协议"),r("a",{attrs:{href:"https://developer.bitcoin.org/devguide/mining.html#getblocktemplate-rpc",target:"_blank",rel:"noopener noreferrer"}},[e._v("GetBlockTemplate mining protocol"),r("OutboundLink")],1),e._v("，或者任何从未在官方版本的比特币核心中实现的网络协议。")]),e._v(" "),r("p",[e._v("所有对等通信都完全通过 TCP 进行。")]),e._v(" "),r("p",[r("strong",[e._v("注意")]),e._v(": 除非它们的描述另有说明，否则本节中提到的所有多字节整数都是按小端顺序(little-endian order)传输的。")]),e._v(" "),r("h2",{attrs:{id:"常量和默认值"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#常量和默认值"}},[e._v("#")]),e._v(" 常量和默认值")]),e._v(" "),r("p",[e._v("下面的常量和默认值取自比特币核心的 "),r("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/blob/master/src/chainparams.cpp",target:"_blank",rel:"noopener noreferrer"}},[e._v("chainparams.cpp"),r("OutboundLink")],1),e._v(" 源代码文件。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("网络")]),e._v(" "),r("th",[e._v("默认端口")]),e._v(" "),r("th",[e._v("开始字符串")]),e._v(" "),r("th",[e._v("Max nBits")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("Mainnet")]),e._v(" "),r("td",[e._v("8333")]),e._v(" "),r("td",[e._v("0xf9beb4d9")]),e._v(" "),r("td",[e._v("0x1d00ffff")])]),e._v(" "),r("tr",[r("td",[e._v("Testnet")]),e._v(" "),r("td",[e._v("18333")]),e._v(" "),r("td",[e._v("0x0b110907")]),e._v(" "),r("td",[e._v("0x1d00ffff")])]),e._v(" "),r("tr",[r("td",[e._v("Regtest")]),e._v(" "),r("td",[e._v("18444")]),e._v(" "),r("td",[e._v("0xfabfb5da")]),e._v(" "),r("td",[e._v("0x207ffffff")])])])]),e._v(" "),r("p",[e._v("注意: 上面的 testnet 开始字符串和 nBits 是用于 testnet3的; 原始的 testnet 使用了不同的字符串和更高(难度更小)的 nBits。")]),e._v(" "),r("p",[e._v("Command line parameters can change what port a node listens on (see "),r("code",[e._v("-help")]),e._v("). Start strings are hardcoded constants that appear at the start of all messages sent on the Bitcoin "),r("a",{attrs:{href:"https://developer.bitcoin.org/devguide/p2p_network.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("network"),r("OutboundLink")],1),e._v("; they may also appear in data files such as Bitcoin Core’s block database. The nBits displayed above are in big-endian order; they’re sent over the "),r("a",{attrs:{href:"https://developer.bitcoin.org/devguide/p2p_network.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("network"),r("OutboundLink")],1),e._v(" in little-endian order.")]),e._v(" "),r("p",[e._v("命令行参数可以更改节点监听的端口(请参阅帮助)。开始字符串是硬编码的常量，出现在比特币网络发送的所有消息的开始; 它们也可能出现在数据文件中，比如比特币核心的块数据库。上面显示的 nBits 是以 big-endian 顺序显示的; 它们以 little-endian 顺序通过网络发送。")]),e._v(" "),r("p",[e._v("Bitcoin Core’s "),r("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/blob/master/src/chainparams.cpp",target:"_blank",rel:"noopener noreferrer"}},[e._v("chainparams.cpp"),r("OutboundLink")],1),e._v(" also includes other constants useful to programs, such as the hash of the genesis blocks for the different networks.")]),e._v(" "),r("p",[e._v("比特币核心的 chainparams.cpp 还包括其他对程序有用的常量，比如不同网络的起源块散列。")]),e._v(" "),r("h2",{attrs:{id:"协议版本"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#协议版本"}},[e._v("#")]),e._v(" 协议版本")]),e._v(" "),r("p",[e._v("The table below lists some notable versions of the P2P "),r("a",{attrs:{href:"https://developer.bitcoin.org/devguide/p2p_network.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("network"),r("OutboundLink")],1),e._v(" protocol, with the most recent versions listed first. (If you know of a protocol version that implemented a major change but which is not listed here, please "),r("a",{attrs:{href:"https://github.com/bitcoin-dot-org/bitcoin.org/issues",target:"_blank",rel:"noopener noreferrer"}},[e._v("open an issue"),r("OutboundLink")],1),e._v(".)")]),e._v(" "),r("p",[e._v("下表列出了 P2P 网络协议的一些著名版本，首先列出了最新版本。(如果您知道一个协议版本实现了一个重大更改，但是没有在这里列出，请打开一个问题。)")]),e._v(" "),r("p",[e._v("As of Bitcoin Core 0.18.0, the most recent protocol version is 70015.")]),e._v(" "),r("p",[e._v("在比特币核心0.18.0中，最新的协议版本是70015。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("版本")]),e._v(" "),r("th",[e._v("首次发布")]),e._v(" "),r("th",[e._v("主要改变")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("70015")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://bitcoin.org/en/release/v0.13.2",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitcoin Core 0.13.2"),r("OutboundLink")],1),e._v(" (Jan 2017)")]),e._v(" "),r("td",[e._v("- New banning behavior for invalid compact blocks "),r("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/pull/9026",target:"_blank",rel:"noopener noreferrer"}},[e._v("#9026"),r("OutboundLink")],1),e._v(" in v0.14.0, Backported to v0.13.2 in "),r("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/pull/9048",target:"_blank",rel:"noopener noreferrer"}},[e._v("#9048"),r("OutboundLink")],1),e._v(".新的禁止行为无效的紧凑块 # 9026在0.14.0，回移植到0.13.2在 # 9048。")])]),e._v(" "),r("tr",[r("td",[e._v("70014")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://bitcoin.org/en/release/v0.13.0",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitcoin Core 0.13.0"),r("OutboundLink")],1),e._v(" (Aug 2016)")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP152"),r("OutboundLink")],1),e._v(": • Added "),r("code",[e._v("sendcmpct")]),e._v(", "),r("code",[e._v("cmpctblock")]),e._v(", "),r("code",[e._v("getblocktxn")]),e._v(", "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#blocktxn",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("blocktxn")]),e._v(" messages"),r("OutboundLink")],1),e._v(" • Added "),r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-msg-cmpct-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MSG_CMPCT_BLOCK”"),r("OutboundLink")],1),e._v(" inventory type to "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getdata",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getdata")]),e._v(" message"),r("OutboundLink")],1),e._v(".152: •添加 sendcmpct，cmpctblock，getblocktxn，"),r("code",[e._v("blocktxn")]),e._v("消息•添加“ MSG _ cmpct _ block”目录类型到"),r("code",[e._v("getdata")]),e._v("消息。")])]),e._v(" "),r("tr",[r("td",[e._v("70013")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://bitcoin.org/en/release/v0.13.0",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitcoin Core 0.13.0"),r("OutboundLink")],1),e._v(" (Aug 2016)")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0133.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP133"),r("OutboundLink")],1),e._v(": • Added "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#feefilter",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("feefilter")]),e._v(" message"),r("OutboundLink")],1),e._v(". • Removed "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#alert",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("alert")]),e._v(" message"),r("OutboundLink")],1),e._v(" system. See "),r("a",{attrs:{href:"https://bitcoin.org/en/alert/2016-11-01-alert-retirement",target:"_blank",rel:"noopener noreferrer"}},[e._v("Alert System Retirement"),r("OutboundLink")],1),e._v("BIP133: •添加"),r("code",[e._v("feefilter")]),e._v("消息•删除"),r("code",[e._v("alert")]),e._v("消息系统")])]),e._v(" "),r("tr",[r("td",[e._v("70012")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://bitcoin.org/en/release/v0.12.0",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitcoin Core 0.12.0"),r("OutboundLink")],1),e._v(" (Feb 2016)")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0130.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP130"),r("OutboundLink")],1),e._v(": • Added "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#sendheaders",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("sendheaders")]),e._v(" message"),r("OutboundLink")],1),e._v(".130: •添加"),r("code",[e._v("sendheaders")]),e._v("消息。")])]),e._v(" "),r("tr",[r("td",[e._v("70011")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://bitcoin.org/en/release/v0.12.0",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitcoin Core 0.12.0"),r("OutboundLink")],1),e._v(" (Feb 2016)")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP111"),r("OutboundLink")],1),e._v(": • "),r("code",[e._v("filter*")]),e._v(" messages are disabled without NODE_BLOOM after and including this version.111: •过滤器 * 消息被禁用后没有节点 bloom，并包括这个版本。")])]),e._v(" "),r("tr",[r("td",[e._v("70002")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://bitcoin.org/en/release/v0.9.0",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitcoin Core 0.9.0"),r("OutboundLink")],1),e._v(" (Mar 2014)")]),e._v(" "),r("td",[e._v("- Send multiple "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#inv",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("inv")]),e._v(" messages"),r("OutboundLink")],1),e._v(" in response to a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#mempool",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("mempool")]),e._v(" message"),r("OutboundLink")],1),e._v(" if necessary "),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0061.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP61"),r("OutboundLink")],1),e._v(": • Added "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#reject",target:"_blank",rel:"noopener noreferrer"}},[e._v("“reject” message"),r("OutboundLink")],1),e._v("发送多个"),r("code",[e._v("inv")]),e._v("消息来响应一个"),r("code",[e._v("mempool")]),e._v("消息(如果必要的话) BIP61: •添加“拒绝”消息")])]),e._v(" "),r("tr",[r("td",[e._v("70001")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://bitcoin.org/en/release/v0.8.0",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitcoin Core 0.8.0"),r("OutboundLink")],1),e._v(" (Feb 2013)")]),e._v(" "),r("td",[e._v("- Added "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#notfound",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("notfound")]),e._v(" message"),r("OutboundLink")],1),e._v(". "),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP37"),r("OutboundLink")],1),e._v(": • Added "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#filterload",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("filterload")]),e._v(" message"),r("OutboundLink")],1),e._v(". • Added "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#filteradd",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("filteradd")]),e._v(" message"),r("OutboundLink")],1),e._v(". • Added "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#filterclear",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("filterclear")]),e._v(" message"),r("OutboundLink")],1),e._v(". • Added "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#merkleblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("merkleblock")]),e._v(" message"),r("OutboundLink")],1),e._v(". • Added relay field to "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#version",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("version")]),e._v(" message"),r("OutboundLink")],1),e._v(" • Added "),r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-msg-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MSG_FILTERED_BLOCK”"),r("OutboundLink")],1),e._v(" inventory type to "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getdata",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getdata")]),e._v(" message"),r("OutboundLink")],1),e._v(".添加了“未找到”信息。BIP37: •添加“过滤加载”信息。•添加了"),r("code",[e._v("filteradd")]),e._v("信息。•添加了“过滤/清除”信息。•添加了"),r("code",[e._v("merkleblock")]),e._v("信息。•在"),r("code",[e._v("version")]),e._v("消息中添加中继字段•在"),r("code",[e._v("getdata")]),e._v("消息中添加“ MSG _ filtered _ block”库存类型。")])]),e._v(" "),r("tr",[r("td",[e._v("60002")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://bitcoin.org/en/release/v0.7.0",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitcoin Core 0.7.0"),r("OutboundLink")],1),e._v(" (Sep 2012)")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0035.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP35"),r("OutboundLink")],1),e._v(": • Added "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#mempool",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("mempool")]),e._v(" message"),r("OutboundLink")],1),e._v(". • Extended "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getdata",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getdata")]),e._v(" message"),r("OutboundLink")],1),e._v(" to allow download of memory pool transactionsBIP35: •添加了"),r("code",[e._v("mempool")]),e._v("消息•扩展的"),r("code",[e._v("getdata")]),e._v("消息允许下载内存池事务")])]),e._v(" "),r("tr",[r("td",[e._v("60001")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://bitcoin.org/en/release/v0.6.1",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitcoin Core 0.6.1"),r("OutboundLink")],1),e._v(" (May 2012)")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0031.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP31"),r("OutboundLink")],1),e._v(": • Added nonce field to "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#ping",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ping")]),e._v(" message"),r("OutboundLink")],1),e._v(" • Added "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#pong",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("pong")]),e._v(" message"),r("OutboundLink")],1),e._v("BIP31: •在"),r("code",[e._v("ping")]),e._v("消息中添加 nonce 字段•添加"),r("code",[e._v("pong")]),e._v("消息")])]),e._v(" "),r("tr",[r("td",[e._v("60000")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://bitcoin.org/en/release/v0.6.0",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitcoin Core 0.6.0"),r("OutboundLink")],1),e._v(" (Mar 2012)")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0014.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP14"),r("OutboundLink")],1),e._v(": • Separated protocol version from Bitcoin Core version14: •从比特币核心版本中分离出协议版本")])]),e._v(" "),r("tr",[r("td",[e._v("31800")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/commit/82201801336f64ee77851b9eaab9383ee4e442f0",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitcoin Core 0.3.18"),r("OutboundLink")],1),e._v(" (Dec 2010)")]),e._v(" "),r("td",[e._v("- Added "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getheaders",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getheaders")]),e._v(" message"),r("OutboundLink")],1),e._v(" and "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#headers",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("headers")]),e._v(" message"),r("OutboundLink")],1),e._v(".增加了"),r("code",[e._v("getheaders")]),e._v("的消息和“头”的消息。")])]),e._v(" "),r("tr",[r("td",[e._v("31402")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/commit/c891967b6fcab2e8dc4ce0c787312b36c07efa4d",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitcoin Core 0.3.15"),r("OutboundLink")],1),e._v(" (Oct 2010)")]),e._v(" "),r("td",[e._v("- Added time field to "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#addr",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("addr")]),e._v(" message"),r("OutboundLink")],1),e._v(".添加时间字段到"),r("code",[e._v("addr")]),e._v("消息。")])]),e._v(" "),r("tr",[r("td",[e._v("311")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/commit/343328c6b8db85e58a1feea85f0d10e62967fa19",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitcoin Core 0.3.11"),r("OutboundLink")],1),e._v(" (Aug 2010)")]),e._v(" "),r("td",[e._v("- Added "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#alert",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("alert")]),e._v(" message"),r("OutboundLink")],1),e._v(".增加了“警报”信息。")])]),e._v(" "),r("tr",[r("td",[e._v("209")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/commit/42605ce8bcc9bd01b86491c74fee14de77960868",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitcoin Core 0.2.9"),r("OutboundLink")],1),e._v(" (May 2010)")]),e._v(" "),r("td",[e._v("- Added checksum field to message headers, added "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#verack",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("verack")]),e._v(" message"),r("OutboundLink")],1),e._v(", and added starting height field to "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#version",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("version")]),e._v(" message"),r("OutboundLink")],1),e._v(".向消息标题添加校验和字段，添加"),r("code",[e._v("verack")]),e._v("消息，并向"),r("code",[e._v("version")]),e._v("消息添加起始高度字段。")])]),e._v(" "),r("tr",[r("td",[e._v("106")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/commit/cc0b4c3b62367a2aebe5fc1f4d0ed4b97e9c2ac9",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitcoin Core 0.1.6"),r("OutboundLink")],1),e._v(" (Oct 2009)")]),e._v(" "),r("td",[e._v("- Added transmitter IP address fields, nonce, and User Agent (subVer) to "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#version",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("version")]),e._v(" message"),r("OutboundLink")],1),e._v(".增加了发射机 IP 地址字段，nonce，和用户代理(subVer)的“版本”消息。")])])])]),e._v(" "),r("h2",{attrs:{id:"消息头"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#消息头"}},[e._v("#")]),e._v(" 消息头")]),e._v(" "),r("p",[e._v("All messages in the "),r("a",{attrs:{href:"https://developer.bitcoin.org/devguide/p2p_network.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("network"),r("OutboundLink")],1),e._v(" protocol use the same container format, which provides a required multi-field message header and an optional payload. The message header format is:")]),e._v(" "),r("p",[e._v("网络协议中的所有消息使用相同的容器格式，它提供了所需的多字段消息头和可选的有效负载。消息头格式如下:")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("字节")]),e._v(" "),r("th",[e._v("Name姓名")]),e._v(" "),r("th",[e._v("Data Type")]),e._v(" "),r("th",[e._v("描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("4")]),e._v(" "),r("td",[e._v("start string")]),e._v(" "),r("td",[e._v("char[4]")]),e._v(" "),r("td",[e._v("Magic bytes indicating the originating "),r("a",{attrs:{href:"https://developer.bitcoin.org/devguide/p2p_network.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("network"),r("OutboundLink")],1),e._v("; used to seek to next message when stream state is unknown.指示原始网络的神奇字节; 用于在流状态未知时寻找下一条消息。")])]),e._v(" "),r("tr",[r("td",[e._v("12")]),e._v(" "),r("td",[e._v("command name")]),e._v(" "),r("td",[e._v("char[12]")]),e._v(" "),r("td",[e._v("ASCII string which identifies what message type is contained in the payload. Followed by nulls (0x00) to pad out byte count; for example: "),r("code",[e._v("version\\0\\0\\0\\0\\0")]),e._v(".ASCII 字符串，标识有效负载中包含的消息类型。后面跟着 nulls (0x00)来填充字节计数; 例如: version 000000。")])]),e._v(" "),r("tr",[r("td",[e._v("4")]),e._v(" "),r("td",[e._v("payload size")]),e._v(" "),r("td",[e._v("uint32")]),e._v(" "),r("td",[e._v("Number of bytes in payload. The current maximum number of bytes ("),r("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/blob/60abd463ac2eaa8bc1d616d8c07880dc53d97211/src/serialize.h#L23",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MAX_SIZE”"),r("OutboundLink")],1),e._v(") allowed in the payload by Bitcoin Core is 32 MiB—messages with a payload size larger than this will be dropped or rejected.有效载荷中的字节数。目前，比特币核心的有效载荷允许的最大字节数(“ MAX _ size”)为32 mib ーー有效载荷大于此的消息将被删除或拒绝。")])]),e._v(" "),r("tr",[r("td",[e._v("4")]),e._v(" "),r("td",[e._v("checksum")]),e._v(" "),r("td",[e._v("char[4]")]),e._v(" "),r("td",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 209"),r("OutboundLink")],1),r("em",[e._v(".")]),e._v(" First 4 bytes of SHA256(SHA256(payload)) in internal byte order. If payload is empty, as in "),r("code",[e._v("verack")]),e._v(" and "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getaddr",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getaddr")]),e._v(" messages"),r("OutboundLink")],1),e._v(", the checksum is always 0x5df6e0e2 (SHA256(SHA256())).增加了协议版本209。以内部字节顺序排列的 SHA256(SHA256(有效负载))的前4个字节。如果有效负载为空，就像在 verack 和"),r("code",[e._v("getaddr")]),e._v("消息中一样，校验和总是为0x5df6e0e2(SHA256(SHA256(< 空字符串 >))。")])])])]),e._v(" "),r("p",[e._v("The following example is an annotated hex dump of a mainnet message header from a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#verack",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("verack")]),e._v(" message"),r("OutboundLink")],1),e._v(" which has no payload.")]),e._v(" "),r("p",[e._v("下面的示例是一个带注释的十六进制转储，它来自一个没有任何负载的"),r("code",[e._v("verack")]),e._v("消息，其中包含一个 mainnet 消息头。")]),e._v(" "),r("p",[e._v("f9beb4d9 ................... Start string: Mainnet\n76657261636b000000000000 ... Command name: verack + null padding\n00000000 ................... Byte count: 0\n5df6e0e2 ................... Checksum: SHA256(SHA256())")]),e._v(" "),r("h2",{attrs:{id:"数据信息"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据信息"}},[e._v("#")]),e._v(" 数据信息")]),e._v(" "),r("p",[e._v("The following "),r("a",{attrs:{href:"https://developer.bitcoin.org/devguide/p2p_network.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("network"),r("OutboundLink")],1),e._v(" messages all request or provide data related to transactions and blocks.")]),e._v(" "),r("p",[e._v("以下网络消息都请求或提供与事务和块相关的数据。")]),e._v(" "),r("p",[r("img",{staticClass:"lazy",attrs:{alt:"Overview Of P2P Protocol Data Request And Reply Messages","data-src":"https://developer.bitcoin.org/_images/en-p2p-data-messages.svg",loading:"lazy"}})]),e._v(" "),r("p",[e._v("Overview Of P2P Protocol Data Request And Reply Messages"),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#id1",title:"Permalink to this image",target:"_blank",rel:"noopener noreferrer"}},[r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("P2P 协议数据请求和应答消息概述")]),e._v(" "),r("p",[e._v("Many of the data messages use "),r("a",{attrs:{href:"https://developer.bitcoin.org/glossary.html#term-Inventory",target:"_blank",rel:"noopener noreferrer"}},[e._v("inventories"),r("OutboundLink")],1),e._v(" as unique identifiers for transactions and blocks. Inventories have a simple 36-byte structure:")]),e._v(" "),r("p",[e._v("许多数据信息使用存货作为交易和存货的唯一标识符。存货有一个简单的36字节结构:")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Bytes字节")]),e._v(" "),r("th",[e._v("Name姓名")]),e._v(" "),r("th",[e._v("Data Type数据类型")]),e._v(" "),r("th",[e._v("Description描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("4")]),e._v(" "),r("td",[e._v("type identifier")]),e._v(" "),r("td",[e._v("uint32")]),e._v(" "),r("td",[e._v("The type of object which was hashed. See list of type identifiers below.被散列的对象类型。请参阅下面的类型标识符列表。")])]),e._v(" "),r("tr",[r("td",[e._v("32")]),e._v(" "),r("td",[e._v("hash")]),e._v(" "),r("td",[e._v("char[32]")]),e._v(" "),r("td",[e._v("SHA256(SHA256()) hash of the object in internal byte order.对象的内部字节顺序 SHA256(SHA256())哈希。")])])])]),e._v(" "),r("p",[e._v("The currently-available type identifiers are:")]),e._v(" "),r("p",[e._v("目前可用的类型标识符是:")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("类型标识符")]),e._v(" "),r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Description描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("1")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-msg-tx",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MSG_TX”"),r("OutboundLink")],1)]),e._v(" "),r("td",[e._v("The hash is a TXID.散列是一个 TXID。")])]),e._v(" "),r("tr",[r("td",[e._v("2")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-msg-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MSG_BLOCK”"),r("OutboundLink")],1)]),e._v(" "),r("td",[e._v("The hash is of a block header.散列是块头的。")])]),e._v(" "),r("tr",[r("td",[e._v("3")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-msg-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MSG_FILTERED_BLOCK”"),r("OutboundLink")],1)]),e._v(" "),r("td",[e._v("The hash is of a block header; identical to "),r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-msg-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MSG_BLOCK”"),r("OutboundLink")],1),e._v(". When used in a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getdata",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getdata")]),e._v(" message"),r("OutboundLink")],1),e._v(", this indicates the response should be a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#merkleblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("merkleblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" rather than a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#block",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("block")]),e._v(" message"),r("OutboundLink")],1),e._v(" (but this only works if a bloom filter was previously configured). "),r("strong",[e._v("Only for use in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getdata",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getdata")]),e._v(" messages"),r("OutboundLink")],1),e._v("**.**散列是块头的; 与“ MSG _ block”相同。当在"),r("code",[e._v("getdata")]),e._v("消息中使用时，这表明响应应该是"),r("code",[e._v("merkleblock")]),e._v("消息，而不是"),r("code",[e._v("block")]),e._v("消息(但这只适用于以前配置 bloom 过滤器的情况)。仅用于“"),r("code",[e._v("getdata")]),e._v("息。")])]),e._v(" "),r("tr",[r("td",[e._v("4")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-msg-cmpct-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MSG_CMPCT_BLOCK”"),r("OutboundLink")],1)]),e._v(" "),r("td",[e._v("The hash is of a block header; identical to "),r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-msg-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MSG_BLOCK”"),r("OutboundLink")],1),e._v(". When used in a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getdata",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getdata")]),e._v(" message"),r("OutboundLink")],1),e._v(", this indicates the response should be a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" message"),r("OutboundLink")],1),e._v(". "),r("strong",[e._v("Only for use in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getdata",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getdata")]),e._v(" messages"),r("OutboundLink")],1),e._v("**.**散列是块头的; 与“ MSG _ block”相同。在"),r("code",[e._v("getdata")]),e._v("消息中使用时，这表示响应应该是"),r("code",[e._v("cmpctblock")]),e._v("消息。仅用于“"),r("code",[e._v("getdata")]),e._v("息。")])]),e._v(" "),r("tr",[r("td",[e._v("1†")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-msg-witness-tx",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MSG_WITNESS_TX”"),r("OutboundLink")],1)]),e._v(" "),r("td",[e._v("The hash is a TXID. When used in a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getdata",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getdata")]),e._v(" message"),r("OutboundLink")],1),e._v(", this indicates the response should be a transaction message, if the witness structure is nonempty, the witness serialization will be used. "),r("strong",[e._v("Only for use in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getdata",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getdata")]),e._v(" messages"),r("OutboundLink")],1),e._v("**.**散列是一个 TXID。在"),r("code",[e._v("getdata")]),e._v("消息中使用时，这表明响应应该是一个事务消息，如果见证结构非空，则将使用见证序列化。仅用于“"),r("code",[e._v("getdata")]),e._v("息。")])]),e._v(" "),r("tr",[r("td",[e._v("2†")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-msg-witness-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MSG_WITNESS_BLOCK”"),r("OutboundLink")],1)]),e._v(" "),r("td",[e._v("The hash is of a block header; identical to "),r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-msg-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MSG_BLOCK”"),r("OutboundLink")],1),e._v(". When used in a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getdata",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getdata")]),e._v(" message"),r("OutboundLink")],1),e._v(", this indicates the response should be a block message with transactions that have a witness using witness serialization. "),r("strong",[e._v("Only for use in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getdata",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getdata")]),e._v(" messages"),r("OutboundLink")],1),e._v("**.**散列是块头的; 与“ MSG _ block”相同。当在"),r("code",[e._v("getdata")]),e._v("消息中使用时，这表明响应应该是一个块消息，其中包含使用见证序列化的具有见证的事务。仅用于“"),r("code",[e._v("getdata")]),e._v("息。")])]),e._v(" "),r("tr",[r("td",[e._v("3†")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-msg-filtered-witness-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MSG_FILTERED_WITNESS_BLOCK”"),r("OutboundLink")],1)]),e._v(" "),r("td",[e._v("Reserved for future use, not used as of "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("Protocol Version 70015"),r("OutboundLink")],1),e._v(".保留供将来使用，不作为协议版本70015使用。")])])])]),e._v(" "),r("p",[e._v("† These are the same as their respective type identifier but with their 30th bit set to indicate witness. For example MSG_WITNESS_TX = 0x01000040.")]),e._v(" "),r("p",[e._v("†这些数字与它们各自的类型标识符相同，但第30位设置为表示见证人。0x01000040.")]),e._v(" "),r("p",[e._v("Type identifier zero and type identifiers greater than seven are reserved for future implementations. Bitcoin Core ignores all inventories with one of these unknown types.")]),e._v(" "),r("p",[e._v("类型标识符0和大于7的类型标识符被保留用于未来的实现。比特币核心忽略所有库存与这些未知类型之一。")]),e._v(" "),r("h3",{attrs:{id:"block"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#block"}},[e._v("#")]),e._v(" Block")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#block",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("block")]),e._v(" message"),r("OutboundLink")],1),e._v(" transmits a single serialized block in the format described in the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/block_chain.html#serialized-blocks",target:"_blank",rel:"noopener noreferrer"}},[e._v("serialized blocks section"),r("OutboundLink")],1),e._v(". See that section for an example hexdump. It can be sent for two different reasons:")]),e._v(" "),r("p",[r("code",[e._v("block")]),e._v("消息按照序列化块部分中描述的格式传输单个序列化块。查看该部分的示例 hexdump。它可以由两个不同的原因发送:")]),e._v(" "),r("ol",[r("li",[r("p",[r("strong",[e._v("GetData Response:")]),e._v(" Nodes will always send it in response to a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getdata",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getdata")]),e._v(" message"),r("OutboundLink")],1),e._v(" that requests the block with an inventory type of "),r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-msg-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MSG_BLOCK”"),r("OutboundLink")],1),e._v(" (provided the node has that block available for relay).")]),e._v(" "),r("p",[e._v("GetData Response: 节点总是发送它来响应"),r("code",[e._v("getdata")]),e._v("消息，该消息请求带有“ MSG _ block”目录类型的块(只要节点有可用于中继的块)。")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("Unsolicited:")]),e._v(" Some miners will send unsolicited "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#block",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("block")]),e._v(" messages"),r("OutboundLink")],1),e._v(" broadcasting their newly-mined blocks to all of their peers. Many mining pools do the same thing, although some may be misconfigured to send the block from multiple nodes, possibly sending the same block to some peers more than once.")]),e._v(" "),r("p",[e._v("主动提供的: 一些矿工将主动向所有同行发送“封锁”信息，广播他们新开采的矿石。许多挖掘池做同样的事情，尽管有些可能配置错误，从多个节点发送块，可能多次将同一块发送给一些对等点。")])])]),e._v(" "),r("h3",{attrs:{id:"getblocks"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#getblocks"}},[e._v("#")]),e._v(" GetBlocks")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getblocks",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getblocks")]),e._v(" message"),r("OutboundLink")],1),e._v(" requests an "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#inv",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("inv")]),e._v(" message"),r("OutboundLink")],1),e._v(" that provides block header hashes starting from a particular point in the block chain. It allows a peer which has been disconnected or started for the first time to get the data it needs to request the blocks it hasn’t seen.")]),e._v(" "),r("p",[r("code",[e._v("getblocks")]),e._v("消息请求一个"),r("code",[e._v("inv")]),e._v("消息，该消息提供从块链中的特定点开始的块头散列。它允许已断开连接或第一次启动的对等点获取它需要的数据，以请求它没有看到的块。")]),e._v(" "),r("p",[e._v("Peers which have been disconnected may have stale blocks in their locally-stored block chain, so the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getblocks",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getblocks")]),e._v(" message"),r("OutboundLink")],1),e._v(" allows the requesting peer to provide the receiving peer with multiple header hashes at various heights on their local chain. This allows the receiving peer to find, within that list, the last header hash they had in common and reply with all subsequent header hashes.")]),e._v(" "),r("p",[e._v("已断开连接的对等点在其本地存储的块链中可能有陈旧的块，因此"),r("code",[e._v("getblocks")]),e._v("消息允许请求对等点在其本地链上的不同高度向接收对等点提供多个头散列。这允许接收端在该列表中查找它们共有的最后一个头散列，并用所有后续头散列回复。")]),e._v(" "),r("p",[e._v("Note: the receiving peer itself may respond with an "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#inv",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("inv")]),e._v(" message"),r("OutboundLink")],1),e._v(" containing header hashes of stale blocks. It is up to the requesting peer to poll all of its peers to find the best block chain.")]),e._v(" "),r("p",[e._v("注意: 接收端本身可能会响应一个"),r("code",[e._v("inv")]),e._v("消息，其中包含陈旧块的头散列。这取决于要求对等点调查其所有的对等点，以找到最好的块链。")]),e._v(" "),r("p",[e._v("If the receiving peer does not find a common header hash within the list, it will assume the last common block was the genesis block (block zero), so it will reply with in "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#inv",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("inv")]),e._v(" message"),r("OutboundLink")],1),e._v(" containing header hashes starting with block one (the first block after the genesis block).")]),e._v(" "),r("p",[e._v("如果接收端没有在列表中找到一个公共头哈希，它将假定最后一个公共块是 genesis 块(block zero) ，因此它将在"),r("code",[e._v("inv")]),e._v("消息中回复包含头哈希的消息，从 block 1开始(genesis 块后的第一个块)。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Bytes")]),e._v(" "),r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Data Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("4")]),e._v(" "),r("td",[e._v("version")]),e._v(" "),r("td",[e._v("uint32")]),e._v(" "),r("td",[e._v("The protocol version number; the same as sent in the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#version",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("version")]),e._v(" message"),r("OutboundLink")],1),e._v(".协议版本号; 与“版本”消息中发送的相同。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")])]),e._v(" "),r("td",[e._v("hash count")]),e._v(" "),r("td",[e._v("compactSize uint")]),e._v(" "),r("td",[e._v("The number of header hashes provided not including the stop hash. There is no limit except that the byte size of the entire message must be below the "),r("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/blob/60abd463ac2eaa8bc1d616d8c07880dc53d97211/src/serialize.h#L23",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MAX_SIZE”"),r("OutboundLink")],1),e._v(" limit; typically from 1 to 200 hashes are sent.提供的标题散列数不包括停止散列。除了整个消息的字节大小必须低于“ max_size”限制外，没有其他限制; 通常发送1到200个散列。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")])]),e._v(" "),r("td",[e._v("block header hashes")]),e._v(" "),r("td",[e._v("char[32]")]),e._v(" "),r("td",[e._v("One or more block header hashes (32 bytes each) in internal byte order. Hashes should be provided in reverse order of block height, so highest-height hashes are listed first and lowest-height hashes are listed last.按内部字节顺序排列的一个或多个块头散列(每个32字节)。散列应该按照块高度的相反顺序提供，因此最高高度的散列列在前，最低高度的散列列在后。")])]),e._v(" "),r("tr",[r("td",[e._v("32")]),e._v(" "),r("td",[e._v("stop hash")]),e._v(" "),r("td",[e._v("char[32]")]),e._v(" "),r("td",[e._v("The header hash of the last header hash being requested; set to all zeroes to request an "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#inv",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("inv")]),e._v(" message"),r("OutboundLink")],1),e._v(" with all subsequent header hashes (a maximum of 500 will be sent as a reply to this message; if you need more than 500, you will need to send another "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getblocks",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getblocks")]),e._v(" message"),r("OutboundLink")],1),e._v(" with a higher-height header hash as the first entry in block header hash field).请求的最后一个头哈希的头哈希; 将所有零设置为请求包含所有后续头哈希的"),r("code",[e._v("inv")]),e._v("消息(最多500将作为对此消息的回复发送; 如果需要超过500个头哈希，则需要发送另一个"),r("code",[e._v("getblocks")]),e._v("消息，高度较高的头哈希作为块头哈希字段中的第一个条目)。")])])])]),e._v(" "),r("p",[e._v("The following annotated hexdump shows a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getblocks",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getblocks")]),e._v(" message"),r("OutboundLink")],1),e._v(". (The message header has been omitted.)")]),e._v(" "),r("p",[e._v("下面带注释的 hexdump 显示了一条"),r("code",[e._v("getblocks")]),e._v("消息(消息头被省略了。)")]),e._v(" "),r("p",[e._v("71110100 ........................... Protocol version: 70001\n02 ................................. Hash count: 2\nd39f608a7775b537729884d4e6633bb2\n105e55a16a14d31b0000000000000000 ... Hash #1\n5c3e6403d40837110a2e8afb602b1c01\n714bda7ce23bea0a0000000000000000 ... Hash #2\n00000000000000000000000000000000\n00000000000000000000000000000000 ... Stop hash")]),e._v(" "),r("h3",{attrs:{id:"getdata"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#getdata"}},[e._v("#")]),e._v(" GetData")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getdata",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getdata")]),e._v(" message"),r("OutboundLink")],1),e._v(" requests one or more data objects from another node. The objects are requested by an inventory, which the requesting node typically received previously by way of an "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#inv",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("inv")]),e._v(" message"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[r("code",[e._v("getdata")]),e._v("消息从另一个节点请求一个或多个数据对象。对象由库存请求，请求节点通常以前通过"),r("code",[e._v("inv")]),e._v("消息的方式接收该库存。")]),e._v(" "),r("p",[e._v("The response to a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getdata",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getdata")]),e._v(" message"),r("OutboundLink")],1),e._v(" can be a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#tx",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("tx")]),e._v(" message"),r("OutboundLink")],1),e._v(", "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#block",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("block")]),e._v(" message"),r("OutboundLink")],1),e._v(", "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#merkleblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("merkleblock")]),e._v(" message"),r("OutboundLink")],1),e._v(", "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" message"),r("OutboundLink")],1),e._v(", or "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#notfound",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("notfound")]),e._v(" message"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("对"),r("code",[e._v("getdata")]),e._v("消息的响应可以是"),r("code",[e._v("tx")]),e._v("消息、"),r("code",[e._v("block")]),e._v("消息、"),r("code",[e._v("merkleblock")]),e._v("消息、"),r("code",[e._v("cmpctblock")]),e._v("消息或"),r("code",[e._v("notfound")]),e._v("消息。")]),e._v(" "),r("p",[e._v("This message cannot be used to request arbitrary data, such as historic transactions no longer in the memory pool or relay set. Full nodes may not even be able to provide older blocks if they’ve pruned old transactions from their block database. For this reason, the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getdata",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getdata")]),e._v(" message"),r("OutboundLink")],1),e._v(" should usually only be used to request data from a node which previously advertised it had that data by sending an "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#inv",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("inv")]),e._v(" message"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("此消息不能用于请求任意数据，例如不再位于内存池或中继集中的历史事务。如果完整的节点已经从它们的块数据库中删除了旧的事务，那么它们甚至不能提供旧的块。出于这个原因，"),r("code",[e._v("getdata")]),e._v("消息通常应该只用于从以前通过发送"),r("code",[e._v("inv")]),e._v("消息宣布拥有该数据的节点请求数据。")]),e._v(" "),r("p",[e._v("The format and maximum size limitations of the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getdata",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getdata")]),e._v(" message"),r("OutboundLink")],1),e._v(" are identical to the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#inv",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("inv")]),e._v(" message"),r("OutboundLink")],1),e._v("; only the message header differs.")]),e._v(" "),r("p",[r("code",[e._v("getdata")]),e._v("消息的格式和最大大小限制与"),r("code",[e._v("inv")]),e._v("消息相同; 只是消息头不同。")]),e._v(" "),r("h3",{attrs:{id:"getheaders"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#getheaders"}},[e._v("#")]),e._v(" GetHeaders")]),e._v(" "),r("p",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 31800"),r("OutboundLink")],1),r("em",[e._v(".")])]),e._v(" "),r("p",[e._v("增加了协议版本31800。")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getheaders",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getheaders")]),e._v(" message"),r("OutboundLink")],1),e._v(" requests a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#headers",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("headers")]),e._v(" message"),r("OutboundLink")],1),e._v(" that provides block headers starting from a particular point in the block chain. It allows a peer which has been disconnected or started for the first time to get the headers it hasn’t seen yet.")]),e._v(" "),r("p",[r("code",[e._v("getheaders")]),e._v("信息请求一个“头”信息，提供从块链的特定点开始的块头。它允许已断开连接或第一次启动的对等点获取它还没有看到的报头。")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getheaders",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getheaders")]),e._v(" message"),r("OutboundLink")],1),e._v(" is nearly identical to the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getblocks",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getblocks")]),e._v(" message"),r("OutboundLink")],1),e._v(", with one minor difference: the "),r("code",[e._v("inv")]),e._v("reply to the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getblocks",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getblocks")]),e._v(" message"),r("OutboundLink")],1),e._v(" will include no more than 500 block header hashes; the "),r("code",[e._v("headers")]),e._v(" reply to the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getheaders",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getheaders")]),e._v(" message"),r("OutboundLink")],1),e._v(" will include as many as 2,000 block headers.")]),e._v(" "),r("p",[r("code",[e._v("getheaders")]),e._v("消息与"),r("code",[e._v("getblocks")]),e._v("消息几乎完全相同，只有一个小小的区别: 对“"),r("code",[e._v("getblocks")]),e._v("息的 inv 回复将不超过500个块头散列; 对“"),r("code",[e._v("getheaders")]),e._v("息的标题回复将包括多达2000个块头。")]),e._v(" "),r("h3",{attrs:{id:"headers"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#headers"}},[e._v("#")]),e._v(" Headers")]),e._v(" "),r("p",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 31800"),r("OutboundLink")],1),r("em",[e._v(".")])]),e._v(" "),r("p",[e._v("增加了协议版本31800。")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#headers",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("headers")]),e._v(" message"),r("OutboundLink")],1),e._v(" sends block headers to a node which previously requested certain headers with a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getheaders",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getheaders")]),e._v(" message"),r("OutboundLink")],1),e._v(". A headers message can be empty.")]),e._v(" "),r("p",[e._v("“ header”消息向先前请求某些 header 的节点发送块 header，并附带"),r("code",[e._v("getheaders")]),e._v("消息。标题消息可以是空的。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Bytes字节")]),e._v(" "),r("th",[e._v("Name姓名")]),e._v(" "),r("th",[e._v("Data Type数据类型")]),e._v(" "),r("th",[e._v("Description描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("count计数")]),e._v(" "),r("td",[e._v("compactSize uint紧凑型尺寸")]),e._v(" "),r("td",[e._v("Number of block headers up to a maximum of 2,000. Note: headers-first sync assumes the sending node will send the maximum number of headers whenever possible.最多为2,000的块标题数。注意: 头部优先同步假设发送节点将尽可能多地发送头部。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("headers头")]),e._v(" "),r("td",[e._v("block_header块头")]),e._v(" "),r("td",[e._v("Block headers: each 80-byte block header is in the format described in the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/block_chain.html#block-headers",target:"_blank",rel:"noopener noreferrer"}},[e._v("block headers section"),r("OutboundLink")],1),e._v(" with an additional 0x00 suffixed. This 0x00 is called the transaction count, but because the headers message doesn’t include any transactions, the transaction count is always zero.块标题: 每个80字节的块标题都是块标题部分中描述的格式，并带有额外的0x00后缀。这个0x00被称为事务计数，但是因为消息头不包含任何事务，所以事务计数总是为零。")])])])]),e._v(" "),r("p",[e._v("The following annotated hexdump shows a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#headers",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("headers")]),e._v(" message"),r("OutboundLink")],1),e._v(". (The message header has been omitted.)")]),e._v(" "),r("p",[e._v("下面带注释的 hexdump 显示了一个“ header”消息(消息头被省略了。)")]),e._v(" "),r("p",[e._v("01 ................................. Header count: 1\n02000000 ........................... Block version: 2\nb6ff0b1b1680a2862a30ca44d346d9e8\n910d334beb48ca0c0000000000000000 ... Hash of previous block's header\n9d10aa52ee949386ca9385695f04ede2\n70dda20810decd12bc9b048aaab31471 ... Merkle root\n24d95a54 ........................... [Unix time][unix epoch time]: 1415239972\n30c31b18 ........................... Target (bits)\nfe9f0864 ........................... Nonce\n00 ................................. Transaction count (0x00)")]),e._v(" "),r("h3",{attrs:{id:"inv"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#inv"}},[e._v("#")]),e._v(" Inv")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#inv",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("inv")]),e._v(" message"),r("OutboundLink")],1),e._v(" (inventory message) transmits one or more inventories of objects known to the transmitting peer. It can be sent unsolicited to announce new transactions or blocks, or it can be sent in reply to a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getblocks",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getblocks")]),e._v(" message"),r("OutboundLink")],1),e._v(" or "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#mempool",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("mempool")]),e._v(" message"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[r("code",[e._v("inv")]),e._v("消息(库存消息)传输发送端已知的一个或多个对象库存。它可以被主动发送来宣布新的交易或块，或者它可以被发送来回复"),r("code",[e._v("getblocks")]),e._v("消息或"),r("code",[e._v("mempool")]),e._v("消息。")]),e._v(" "),r("p",[e._v("The receiving peer can compare the inventories from an "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#inv",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("inv")]),e._v(" message"),r("OutboundLink")],1),e._v(" against the inventories it has already seen, and then use a follow-up message to request unseen objects.")]),e._v(" "),r("p",[e._v("接收方可以将来自"),r("code",[e._v("inv")]),e._v("消息的库存与它已经看到的库存进行比较，然后使用后续消息请求未看到的对象。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Bytes字节")]),e._v(" "),r("th",[e._v("Name姓名")]),e._v(" "),r("th",[e._v("Data Type数据类型")]),e._v(" "),r("th",[e._v("Description描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("count计数")]),e._v(" "),r("td",[e._v("compactSize uint紧凑型尺寸")]),e._v(" "),r("td",[e._v("The number of inventory entries.存货记录的数量。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("inventory存货")]),e._v(" "),r("td",[e._v("inventory存货")]),e._v(" "),r("td",[e._v("One or more inventory entries up to a maximum of 50,000 entries.一项或多项最多可达50,000项的存货记录。")])])])]),e._v(" "),r("p",[e._v("The following annotated hexdump shows an "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#inv",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("inv")]),e._v(" message"),r("OutboundLink")],1),e._v(" with two inventory entries. (The message header has been omitted.)")]),e._v(" "),r("p",[e._v("下面带注释的 hexdump 显示了一个带有两个库存条目的"),r("code",[e._v("inv")]),e._v("消息(消息头被省略了。)")]),e._v(" "),r("p",[e._v("02 ................................. Count: 2\n01000000 ........................... Type: MSG_TX\nde55ffd709ac1f5dc509a0925d0b1fc4\n42ca034f224732e429081da1b621f55a ... Hash (TXID)\n01000000 ........................... Type: MSG_TX\n91d36d997037e08018262978766f24b8\na055aaf1d872e94ae85e9817b2c68dc7 ... Hash (TXID)")]),e._v(" "),r("h3",{attrs:{id:"mempool"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mempool"}},[e._v("#")]),e._v(" MemPool")]),e._v(" "),r("p",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 60002"),r("OutboundLink")],1),r("em",[e._v(".")])]),e._v(" "),r("p",[e._v("在协议版本60002中添加。")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#mempool",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("mempool")]),e._v(" message"),r("OutboundLink")],1),e._v(" requests the TXIDs of transactions that the receiving node has verified as valid but which have not yet appeared in a block. That is, transactions which are in the receiving node’s memory pool. The response to the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#mempool",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("mempool")]),e._v(" message"),r("OutboundLink")],1),e._v(" is one or more "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#inv",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("inv")]),e._v(" messages"),r("OutboundLink")],1),e._v(" containing the TXIDs in the usual inventory format.")]),e._v(" "),r("p",[r("code",[e._v("mempool")]),e._v("消息请求接收节点已验证为有效但尚未出现在块中的事务的 txid。也就是说，处于接收节点内存池中的事务。对“"),r("code",[e._v("mempool")]),e._v("息的响应是一个或多个"),r("code",[e._v("inv")]),e._v("消息，其中以通常的库存格式包含 txid。")]),e._v(" "),r("p",[e._v("Sending the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#mempool",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("mempool")]),e._v(" message"),r("OutboundLink")],1),e._v(" is mostly useful when a program first connects to the "),r("a",{attrs:{href:"https://developer.bitcoin.org/devguide/p2p_network.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("network"),r("OutboundLink")],1),e._v(". Full nodes can use it to quickly gather most or all of the unconfirmed transactions available on the "),r("a",{attrs:{href:"https://developer.bitcoin.org/devguide/p2p_network.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("network"),r("OutboundLink")],1),e._v("; this is especially useful for miners trying to gather transactions for their transaction fees. SPV clients can set a filter before sending a "),r("code",[e._v("mempool")]),e._v(" to only receive transactions that match that filter; this allows a recently-started client to get most or all unconfirmed transactions related to its wallet.")]),e._v(" "),r("p",[e._v("当程序第一次连接到网络时，发送"),r("code",[e._v("mempool")]),e._v("消息是最有用的。完整的节点可以使用它快速收集网络上大部分或全部可用的未经证实的交易; 这对于试图收集交易以获取交易费的矿工特别有用。SPV 客户机可以在发送记忆池之前设置一个过滤器，以便只接收匹配该过滤器的事务; 这允许最近启动的客户机获取与其钱包相关的大部分或所有未确认的事务。")]),e._v(" "),r("p",[e._v("The "),r("code",[e._v("inv")]),e._v(" response to the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#mempool",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("mempool")]),e._v(" message"),r("OutboundLink")],1),e._v(" is, at best, one node’s view of the "),r("a",{attrs:{href:"https://developer.bitcoin.org/devguide/p2p_network.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("network"),r("OutboundLink")],1),e._v("—not a complete list of unconfirmed transactions on the "),r("a",{attrs:{href:"https://developer.bitcoin.org/devguide/p2p_network.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("network"),r("OutboundLink")],1),e._v(". Here are some additional reasons the list might not be complete:")]),e._v(" "),r("p",[e._v("对"),r("code",[e._v("mempool")]),e._v("消息的 inv 响应充其量只是一个节点对网络的看法ーー不是网络上未经证实的事务的完整列表。下面是一些其他原因，列表可能不完整:")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("Before "),r("a",{attrs:{href:"https://bitcoin.org/en/release/v0.9.0",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitcoin Core 0.9.0"),r("OutboundLink")],1),e._v(", the response to the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#mempool",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("mempool")]),e._v(" message"),r("OutboundLink")],1),e._v(" was only one "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#inv",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("inv")]),e._v(" message"),r("OutboundLink")],1),e._v(". An "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#inv",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("inv")]),e._v(" message"),r("OutboundLink")],1),e._v(" is limited to 50,000 inventories, so a node with a memory pool larger than 50,000 entries would not send everything. Later versions of Bitcoin Core send as many "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#inv",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("inv")]),e._v(" messages"),r("OutboundLink")],1),e._v(" as needed to reference its complete memory pool.")]),e._v(" "),r("p",[e._v("在比特币核心0.9.0之前，对"),r("code",[e._v("mempool")]),e._v("消息的响应只有一条"),r("code",[e._v("inv")]),e._v("消息。“"),r("code",[e._v("inv")]),e._v("息限于5万个库存，因此内存池大于5万个条目的节点不会发送所有内容。后来的比特币核心版本根据需要发送尽可能多的“ "),r("code",[e._v("inv")]),e._v("，以引用其完整的内存池。")])]),e._v(" "),r("li",[r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#mempool",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("mempool")]),e._v(" message"),r("OutboundLink")],1),e._v(" is not currently fully compatible with the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#filterload",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("filterload")]),e._v(" message’s"),r("OutboundLink")],1),r("code",[e._v("BLOOM_UPDATE_ALL")]),e._v(" and "),r("code",[e._v("BLOOM_UPDATE_P2PUBKEY_ONLY")]),e._v(" flags. Mempool transactions are not sorted like in-block transactions, so a transaction (tx2) spending an output can appear before the transaction (tx1) containing that output, which means the automatic filter update mechanism won’t operate until the second-appearing transaction (tx1) is seen—missing the first-appearing transaction (tx2). It has been proposed in "),r("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/issues/2381",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitcoin Core issue #2381"),r("OutboundLink")],1),e._v(" that the transactions should be sorted before being processed by the filter.")]),e._v(" "),r("p",[r("code",[e._v("mempool")]),e._v("消息目前与"),r("code",[e._v("filterload")]),e._v("消息的 BLOOM _ update _ all 和 BLOOM _ update _ p2pubkey _ only 标志不完全兼容。Mempool 事务不像块内事务那样进行排序，因此消耗输出的事务(tx2)可以出现在包含该输出的事务(tx1)之前，这意味着自动过滤器更新机制在第二个出现的事务(tx1)被发现丢失了第一个出现的事务(tx2)之前不会运行。比特币核心 # 2381中提出，交易在被过滤器处理之前应该被分类。")])])]),e._v(" "),r("p",[e._v("There is no payload in a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#mempool",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("mempool")]),e._v(" message"),r("OutboundLink")],1),e._v(". See the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#message-headers",target:"_blank",rel:"noopener noreferrer"}},[e._v("message header section"),r("OutboundLink")],1),e._v(" for an example of a message without a payload.")]),e._v(" "),r("p",[e._v("在"),r("code",[e._v("mempool")]),e._v("消息中没有有效负载。有关无负载消息的示例，请参见消息头部分。")]),e._v(" "),r("h3",{attrs:{id:"merkleblock"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#merkleblock"}},[e._v("#")]),e._v(" MerkleBlock")]),e._v(" "),r("p",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 70001"),r("OutboundLink")],1),r("em",[e._v("as described by")]),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP37"),r("OutboundLink")],1),r("em",[e._v(".")])]),e._v(" "),r("p",[e._v("增加了协议版本70001，如 bip37所描述。")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#merkleblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("merkleblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" is a reply to a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getdata",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getdata")]),e._v(" message"),r("OutboundLink")],1),e._v(" which requested a block using the inventory type "),r("code",[e._v("MSG_MERKLEBLOCK")]),e._v(". It is only part of the reply: if any matching transactions are found, they will be sent separately as "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#tx",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("tx")]),e._v(" messages"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[r("code",[e._v("merkleblock")]),e._v("消息是对使用目录类型 MSG _ merkleblock 请求块的"),r("code",[e._v("getdata")]),e._v("消息的答复。这只是回复的一部分: 如果找到任何匹配的事务，它们将作为"),r("code",[e._v("tx")]),e._v("消息单独发送。")]),e._v(" "),r("p",[e._v("If a filter has been previously set with the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#filterload",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("filterload")]),e._v(" message"),r("OutboundLink")],1),e._v(", the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#merkleblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("merkleblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" will contain the TXIDs of any transactions in the requested block that matched the filter, as well as any parts of the block’s merkle tree necessary to connect those transactions to the block header’s merkle root. The message also contains a complete copy of the block header to allow the client to hash it and confirm its proof of work.")]),e._v(" "),r("p",[e._v("如果以前用"),r("code",[e._v("filterload")]),e._v("消息设置过滤器，那么"),r("code",[e._v("merkleblock")]),e._v("消息将包含所请求块中匹配过滤器的任何事务的 txid，以及块的 merkle 树中将这些事务连接到块头的 merkle 根所必需的任何部分。该消息还包含块标头的完整副本，以便客户机对其进行散列并确认其工作证明。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Bytes字节")]),e._v(" "),r("th",[e._v("Name姓名")]),e._v(" "),r("th",[e._v("Data Type数据类型")]),e._v(" "),r("th",[e._v("Description描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("80")]),e._v(" "),r("td",[e._v("block header集箱")]),e._v(" "),r("td",[e._v("block_header块头")]),e._v(" "),r("td",[e._v("The block header in the format described in the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/block_chain.html#block-headers",target:"_blank",rel:"noopener noreferrer"}},[e._v("block header section"),r("OutboundLink")],1),e._v(".块头部分中描述的格式的块头。")])]),e._v(" "),r("tr",[r("td",[e._v("4图4")]),e._v(" "),r("td",[e._v("transaction count交易计数")]),e._v(" "),r("td",[e._v("uint32_t32t")]),e._v(" "),r("td",[e._v("The number of transactions in the block (including ones that don’t match the filter).块中的事务数(包括不匹配过滤器的事务)。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("hash count杂凑计数")]),e._v(" "),r("td",[e._v("compactSize uint紧凑型尺寸")]),e._v(" "),r("td",[e._v("The number of hashes in the following field.下列字段中的散列数。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("hashes散列")]),e._v(" "),r("td",[e._v("char[32][32]")]),e._v(" "),r("td",[e._v("One or more hashes of both transactions and merkle nodes in internal byte order. Each hash is 32 bytes.事务和 merkle 节点按内部字节顺序排列的一个或多个散列，每个散列为32字节。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("flag byte count标志字节计数")]),e._v(" "),r("td",[e._v("compactSize uint紧凑型尺寸")]),e._v(" "),r("td",[e._v("The number of flag bytes in the following field.下列字段中的标志字节数。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("flags旗帜")]),e._v(" "),r("td",[e._v("byte[]字节[]")]),e._v(" "),r("td",[e._v("A sequence of bits packed eight in a byte with the least significant bit first. May be padded to the nearest byte boundary but must not contain any more bits than that. Used to assign the hashes to particular nodes in the merkle tree as described below.一个位序列在一个字节中包含了八个位，首先是最低有效位。可以填充到最近的字节边界，但不能包含超过该边界的任何位。用于将散列分配给默克尔树中的特定节点，如下所述。")])])])]),e._v(" "),r("p",[e._v("The annotated hexdump below shows a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#merkleblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("merkleblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" which corresponds to the examples below. (The message header has been omitted.)")]),e._v(" "),r("p",[e._v("下面带注释的 hexdump 显示了一个"),r("code",[e._v("merkleblock")]),e._v("消息，它对应于下面的示例(消息头被省略了。)")]),e._v(" "),r("p",[e._v("01000000 ........................... Block version: 1\n82bb869cf3a793432a66e826e05a6fc3\n7469f8efb7421dc88067010000000000 ... Hash of previous block's header\n7f16c5962e8bd963659c793ce370d95f\n093bc7e367117b3c30c1f8fdd0d97287 ... Merkle root\n76381b4d ........................... Time: 1293629558\n4c86041b ........................... nBits: 0x04864c * 256**(0x1b-3)\n554b8529 ........................... Nonce\n07000000 ........................... Transaction count: 7\n04 ................................. Hash count: 4\n3612262624047ee87660be1a707519a4\n43b1c1ce3d248cbfc6c15870f6c5daa2 ... Hash #1\n019f5b01d4195ecbc9398fbf3c3b1fa9\nbb3183301d7a1fb3bd174fcfa40a2b65 ... Hash #2\n41ed70551dd7e841883ab8f0b16bf041\n76b7d1480e4f0af9f3d4c3595768d068 ... Hash #3\n20d2a7bc994987302e5b1ac80fc425fe\n25f8b63169ea78e68fbaaefa59379bbf ... Hash #4\n01 ................................. Flag bytes: 1\n1d ................................. Flags: 1 0 1 1 1 0 0 0")]),e._v(" "),r("p",[e._v("Note: when fully decoded, the above "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#merkleblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("merkleblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" provided the TXID for a single transaction that matched the filter. In the "),r("a",{attrs:{href:"https://developer.bitcoin.org/devguide/p2p_network.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("network"),r("OutboundLink")],1),e._v(" traffic dump this output was taken from, the full transaction belonging to that TXID was sent immediately after the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#merkleblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("merkleblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" as a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#tx",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("tx")]),e._v(" message"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("注意: 完全解码后，上面的"),r("code",[e._v("merkleblock")]),e._v("消息为匹配过滤器的单个事务提供了 TXID。在网络通信转储中，这个输出是从"),r("code",[e._v("tx")]),e._v("消息中获取的，属于这个 TXID 的完整事务是在“"),r("code",[e._v("merkleblock")]),e._v("息之后立即发送的。")]),e._v(" "),r("h4",{attrs:{id:"parsing-a-merkleblock-message"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#parsing-a-merkleblock-message"}},[e._v("#")]),e._v(" Parsing A MerkleBlock Message")]),e._v(" "),r("p",[e._v("As seen in the annotated hexdump above, the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#merkleblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("merkleblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" provides three special data types: a transaction count, a list of hashes, and a list of one-bit flags.")]),e._v(" "),r("p",[e._v("如上面带注释的 hexdump 所示，"),r("code",[e._v("merkleblock")]),e._v("消息提供了三种特殊的数据类型: 事务计数、散列列表和一位标志列表。")]),e._v(" "),r("p",[e._v("You can use the transaction count to construct an empty merkle tree. We’ll call each entry in the tree a node; on the bottom are TXID nodes—the hashes for these nodes are TXIDs; the remaining nodes (including the merkle root) are non-TXID nodes—they may actually have the same hash as a TXID, but we treat them differently.")]),e._v(" "),r("p",[e._v("您可以使用事务计数来构造一个空的 merkle 树。我们将树中的每个条目称为一个节点; 底部是 TXID 节点ー这些节点的散列是 TXID; 其余的节点(包括 merkle 根)是非 TXID 节点ー它们实际上可能拥有与 TXID 相同的散列，但我们对它们的处理不同。")]),e._v(" "),r("p",[r("img",{staticClass:"lazy",attrs:{alt:"Example Of Parsing A MerkleBlock Message","data-src":"https://developer.bitcoin.org/_images/animated-en-merkleblock-parsing.gif",loading:"lazy"}})]),e._v(" "),r("p",[e._v("Example Of Parsing A MerkleBlock Message"),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#id2",title:"Permalink to this image",target:"_blank",rel:"noopener noreferrer"}},[r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("解析 MerkleBlock 消息的示例")]),e._v(" "),r("p",[e._v("Keep the hashes and flags in the order they appear in the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#merkleblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("merkleblock")]),e._v(" message"),r("OutboundLink")],1),e._v(". When we say “next flag” or “next hash”, we mean the next flag or hash on the list, even if it’s the first one we’ve used so far.")]),e._v(" "),r("p",[e._v("将散列和标志保持在"),r("code",[e._v("merkleblock")]),e._v("消息中出现的顺序。当我们说“下一个标志”或“下一个散列”时，我们指的是列表上的下一个标志或散列，即使它是我们迄今为止使用的第一个。")]),e._v(" "),r("p",[e._v("Start with the merkle root node and the first flag. The table below describes how to evaluate a flag based on whether the node being processed is a TXID node or a non-TXID node. Once you apply a flag to a node, never apply another flag to that same node or reuse that same flag again.")]),e._v(" "),r("p",[e._v("从 merkle 根节点和第一个标志开始。下表描述了如何根据正在处理的节点是 TXID 节点还是非 TXID 节点来计算标志。将标志应用于节点后，不要将另一个标志应用于同一个节点，或者再次使用同一个标志。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Flag国旗")]),e._v(" "),r("th",[e._v("TXID NodeTXID 节点")]),e._v(" "),r("th",[e._v("Non-TXID Node非 txid 节点")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("strong",[e._v("0")])]),e._v(" "),r("td",[e._v("Use the next hash as this node’s TXID, but this transaction didn’t match the filter.使用下一个散列作为此节点的 TXID，但此事务与筛选器不匹配。")]),e._v(" "),r("td",[e._v("Use the next hash as this node’s hash. Don’t process any descendant nodes.使用下一个散列作为此节点的散列。不处理任何子代节点。")])]),e._v(" "),r("tr",[r("td",[r("strong",[e._v("1")])]),e._v(" "),r("td",[e._v("Use the next hash as this node’s TXID, and mark this transaction as matching the filter.使用下一个散列作为此节点的 TXID，并将此事务标记为匹配筛选器。")]),e._v(" "),r("td",[e._v("The hash needs to be computed. Process the left child node to get its hash; process the right child node to get its hash; then concatenate the two hashes as 64 raw bytes and hash them to get this node’s hash.需要计算散列值。处理左子节点以获得其散列; 处理右子节点以获得其散列; 然后将两个散列连接为64个原始字节并对其进行散列以获得该节点的散列。")])])])]),e._v(" "),r("p",[e._v("Any time you begin processing a node for the first time, evaluate the next flag. Never use a flag at any other time.")]),e._v(" "),r("p",[e._v("当您第一次开始处理一个节点时，计算下一个标志。在任何时候都不要使用旗帜。")]),e._v(" "),r("p",[e._v("When processing a child node, you may need to process its children (the grandchildren of the original node) or further-descended nodes before returning to the parent node. This is expected—keep processing depth first until you reach a TXID node or a non-TXID node with a flag of 0.")]),e._v(" "),r("p",[e._v("在处理子节点时，在返回父节点之前，可能需要处理其子节点(原始节点的子节点)或进一步下降的节点。这是预期的ー首先保持处理深度，直到到达 TXID 节点或标志为0的非 TXID 节点。")]),e._v(" "),r("p",[e._v("After you process a TXID node or a non-TXID node with a flag of 0, stop processing flags and begin to ascend the tree. As you ascend, compute the hash of any nodes for which you now have both child hashes or for which you now have the sole child hash. See the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/block_chain.html#merkle-trees",target:"_blank",rel:"noopener noreferrer"}},[e._v("merkle tree section"),r("OutboundLink")],1),e._v(" for hashing instructions. If you reach a node where only the left hash is known, descend into its right child (if present) and further descendants as necessary.")]),e._v(" "),r("p",[e._v("处理 TXID 节点或标志为0的非 TXID 节点后，停止处理标志并开始攀登树。在提升过程中，计算现在有两个子散列或现在有唯一子散列的任何节点的散列。有关散列指令，请参阅 merkle 树部分。如果到达一个只知道左散列的节点，则下降到它的右子节点(如果存在) ，并根据需要进一步下降到其子节点。")]),e._v(" "),r("p",[e._v("However, if you find a node whose left and right children both have the same hash, fail. This is related to "),r("a",{attrs:{href:"https://en.bitcoin.it/wiki/CVEs#CVE-2012-2459",target:"_blank",rel:"noopener noreferrer"}},[e._v("CVE-2012-2459"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("但是，如果发现某个节点的左右子节点都具有相同的散列值，则失败。这与 CVE-2012-2459有关。")]),e._v(" "),r("p",[e._v("Continue descending and ascending until you have enough information to obtain the hash of the merkle root node. If you run out of flags or hashes before that condition is reached, fail. Then perform the following checks (order doesn’t matter):")]),e._v(" "),r("p",[e._v("继续降序和升序，直到获得足够的信息来获取 merkle 根节点的散列。如果在达到该条件之前用完了标志或散列，则失败。然后执行以下检查(顺序无关紧要) :")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("Fail if there are unused hashes in the hashes list.")]),e._v(" "),r("p",[e._v("如果哈希表中有未使用的哈希，则失败。")])]),e._v(" "),r("li",[r("p",[e._v("Fail if there are unused flag bits—except for the minimum number of bits necessary to pad up to the next full byte.")]),e._v(" "),r("p",[e._v("如果有未使用的标志位，则失败ーー除非最小位数需要填充到下一个完整字节。")])]),e._v(" "),r("li",[r("p",[e._v("Fail if the hash of the merkle root node is not identical to the merkle root in the block header.")]),e._v(" "),r("p",[e._v("如果 merkle 根节点的哈希值与块头中的 merkle 根不相同，则失败。")])]),e._v(" "),r("li",[r("p",[e._v("Fail if the block header is invalid. Remember to ensure that the hash of the header is less than or equal to the target threshold encoded by the nBits header field. Your program should also, of course, attempt to ensure the header belongs to the best block chain and that the user knows how many confirmations this block has.")]),e._v(" "),r("p",[e._v("如果块头无效，则失败。请记住，要确保标头的散列小于或等于 nBits 标头字段编码的目标阈值。当然，您的程序还应该尝试确保标头属于最好的块链，并确保用户知道这个块有多少个确认项。")])])]),e._v(" "),r("p",[e._v("For a detailed example of parsing a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#merkleblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("merkleblock")]),e._v(" message"),r("OutboundLink")],1),e._v(", please see the corresponding "),r("a",{attrs:{href:"https://developer.bitcoin.org/examples/p2p_networking.html#parsing-a-merkleblock",target:"_blank",rel:"noopener noreferrer"}},[e._v("merkle block examples section"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("有关解析"),r("code",[e._v("merkleblock")]),e._v("消息的详细示例，请参阅相应的 merkle block examples 部分。")]),e._v(" "),r("h4",{attrs:{id:"creating-a-merkleblock-message"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-merkleblock-message"}},[e._v("#")]),e._v(" Creating A MerkleBlock Message")]),e._v(" "),r("p",[e._v("It’s easier to understand how to create a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#merkleblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("merkleblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" after you understand how to parse an already-created message, so we recommend you read the parsing section above first.")]),e._v(" "),r("p",[e._v("在理解了如何解析已经创建的消息之后，更容易理解如何创建"),r("code",[e._v("merkleblock")]),e._v("消息，因此我们建议您首先阅读上面的解析部分。")]),e._v(" "),r("p",[e._v("Create a complete merkle tree with TXIDs on the bottom row and all the other hashes calculated up to the merkle root on the top row. For each transaction that matches the filter, track its TXID node and all of its ancestor nodes.")]),e._v(" "),r("p",[e._v("创建一个完整的 merkle 树，在下面一行使用 txid，并且所有其他散列都计算到上面一行的 merkle 根。对于匹配筛选器的每个事务，跟踪其 TXID 节点及其所有祖先节点。")]),e._v(" "),r("p",[r("img",{staticClass:"lazy",attrs:{alt:"Example Of Creating A MerkleBlock Message","data-src":"https://developer.bitcoin.org/_images/animated-en-merkleblock-creation.gif",loading:"lazy"}})]),e._v(" "),r("p",[e._v("Example Of Creating A MerkleBlock Message"),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#id3",title:"Permalink to this image",target:"_blank",rel:"noopener noreferrer"}},[r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("创建 MerkleBlock 消息的示例")]),e._v(" "),r("p",[e._v("Start processing the tree with the merkle root node. The table below describes how to process both TXID nodes and non-TXID nodes based on whether the node is a match, a match ancestor, or neither a match nor a match ancestor.")]),e._v(" "),r("p",[e._v("开始处理带有 merkle 根节点的树。下表描述了如何根据节点是匹配的、匹配的或既不匹配也不匹配的祖先来处理 TXID 节点和非 TXID 节点。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th"),e._v(" "),r("th",[e._v("TXID NodeTXID 节点")]),e._v(" "),r("th",[e._v("Non-TXID Node非 txid 节点")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("strong",[e._v("Neither Match Nor Match Ancestor")]),e._v("既不匹配也不匹配祖先")]),e._v(" "),r("td",[e._v("Append a 0 to the flag list; append this node’s TXID to the hash list.将0附加到标志列表; 将该节点的 TXID 附加到哈希列表。")]),e._v(" "),r("td",[e._v("Append a 0 to the flag list; append this node’s hash to the hash list. Do not descend into its child nodes.将0附加到标志列表; 将该节点的哈希附加到哈希列表。不要下降到它的子节点。")])]),e._v(" "),r("tr",[r("td",[r("strong",[e._v("Match Or Match Ancestor")]),e._v("匹配或匹配祖先")]),e._v(" "),r("td",[e._v("Append a 1 to the flag list; append this node’s TXID to the hash list.将1附加到标志列表; 将该节点的 TXID 附加到哈希列表。")]),e._v(" "),r("td",[e._v("Append a 1 to the flag list; process the left child node. Then, if the node has a right child, process the right child. Do not append a hash to the hash list for this node.在标志列表中追加1; 处理左边的子节点。然后，如果节点有一个正确的子节点，则处理正确的子节点。不要在此节点的哈希列表中追加哈希。")])])])]),e._v(" "),r("p",[e._v("Any time you begin processing a node for the first time, a flag should be appended to the flag list. Never put a flag on the list at any other time, except when processing is complete to pad out the flag list to a byte boundary.")]),e._v(" "),r("p",[e._v("当您第一次开始处理一个节点时，应该在标志列表中添加一个标志。在任何时候都不要在列表上放置标志，除非处理完成后将标志列表填充到字节边界。")]),e._v(" "),r("p",[e._v("When processing a child node, you may need to process its children (the grandchildren of the original node) or further-descended nodes before returning to the parent node. This is expected—keep processing depth first until you reach a TXID node or a node which is neither a TXID nor a match ancestor.")]),e._v(" "),r("p",[e._v("在处理子节点时，在返回父节点之前，可能需要处理其子节点(原始节点的子节点)或进一步下降的节点。这是预期的ー首先保持处理深度，直到到达 TXID 节点或既不是 TXID 也不是匹配祖先的节点。")]),e._v(" "),r("p",[e._v("After you process a TXID node or a node which is neither a TXID nor a match ancestor, stop processing and begin to ascend the tree until you find a node with a right child you haven’t processed yet. Descend into that right child and process it.")]),e._v(" "),r("p",[e._v("处理 TXID 节点或既不是 TXID 也不是匹配祖先的节点后，停止处理并开始提升树，直到找到一个具有尚未处理的正确子节点。深入那个正确的孩子，并处理它。")]),e._v(" "),r("p",[e._v("After you fully process the merkle root node according to the instructions in the table above, processing is complete. Pad your flag list to a byte boundary and construct the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#merkleblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("merkleblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" using the template near the beginning of this subsection.")]),e._v(" "),r("p",[e._v("根据上面表中的指令完全处理 merkle 根节点后，处理就完成了。将标志列表填充到字节边界，并使用本小节开头附近的模板构造"),r("code",[e._v("merkleblock")]),e._v("消息。")]),e._v(" "),r("h3",{attrs:{id:"cmpctblock"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cmpctblock"}},[e._v("#")]),e._v(" CmpctBlock")]),e._v(" "),r("p",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 70014"),r("OutboundLink")],1),r("em",[e._v("as described by")]),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP152"),r("OutboundLink")],1),r("em",[e._v(".")])]),e._v(" "),r("p",[e._v("增加了协议版本70014as described by bip152。")]),e._v(" "),r("p",[r("strong",[e._v("Version 1 compact blocks are pre-segwit (txids)")]),e._v(" "),r("strong",[e._v("Version 2 compact blocks are post-segwit (wtxids)")])]),e._v(" "),r("p",[e._v("版本1紧凑块是 pre-segwit (txids)版本2紧凑块是 post-segwit (wtxids)")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" is a reply to a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getdata",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getdata")]),e._v(" message"),r("OutboundLink")],1),e._v(" which requested a block using the inventory type "),r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-msg-cmpct-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MSG_CMPCT_BLOCK”"),r("OutboundLink")],1),e._v(". If the requested block was recently announced and is close to the tip of the best chain of the receiver and after having sent the requesting peer a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#sendcmpct",target:"_blank",rel:"noopener noreferrer"}},[e._v("“sendcmpct” message"),r("OutboundLink")],1),e._v(", nodes respond with a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" containing data for the block.")]),e._v(" "),r("p",[r("code",[e._v("cmpctblock")]),e._v("消息是对"),r("code",[e._v("getdata")]),e._v("消息的回复，该消息使用目录类型“ MSG _ cmpct _ block”请求一个块。如果所请求的块是最近宣布的，并且接近接收方最佳链条的末端，在向请求对等方发送“ sendcmpct”消息之后，节点用一个包含块的数据的“"),r("code",[e._v("cmpctblock")]),e._v("息进行响应。")]),e._v(" "),r("p",[r("strong",[e._v("If the requested block is too old, the node responds with a full non-compact block")])]),e._v(" "),r("p",[e._v("如果请求的块太旧，节点将用一个完整的非紧凑块进行响应")]),e._v(" "),r("p",[e._v("Upon "),r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-receipt",target:"_blank",rel:"noopener noreferrer"}},[e._v("receipt"),r("OutboundLink")],1),e._v(" of a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" message"),r("OutboundLink")],1),e._v(", after sending a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#sendcmpct",target:"_blank",rel:"noopener noreferrer"}},[e._v("“sendcmpct” message"),r("OutboundLink")],1),e._v(", nodes should calculate the short transaction ID for each unconfirmed transaction they have available (ie in their mempool) and compare each to each short transaction ID in the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" message"),r("OutboundLink")],1),e._v(". After finding already-available transactions, nodes which do not have all transactions available to reconstruct the full block should request the missing transactions using a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getblocktxn",target:"_blank",rel:"noopener noreferrer"}},[e._v("“getblocktxn” message"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("在收到"),r("code",[e._v("cmpctblock")]),e._v("消息后，在发送“ sendcmpct”消息后，节点应该计算每个可用的未确认事务的短事务 ID (即在它们的 mempool 中) ，并将每个事务 ID 与“"),r("code",[e._v("cmpctblock")]),e._v("息中的每个短事务 ID 进行比较。在找到已经可用的事务之后，没有所有可用事务来重构完整块的节点应该使用“ getblocktxn”消息请求丢失的事务。")]),e._v(" "),r("p",[e._v("A node must not send a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" unless they are able to respond to a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getblocktxn",target:"_blank",rel:"noopener noreferrer"}},[e._v("“getblocktxn” message"),r("OutboundLink")],1),e._v("which requests every transaction in the block. A node must not send a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" without having validated that the header properly commits to each transaction in the block, and properly builds on top of the existing, fully-validated chain with a valid proof-of-work either as a part of the current most-work valid chain, or building directly on top of it. A node may send a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" before validating that each transaction in the block validly spends existing UTXO set entries.")]),e._v(" "),r("p",[e._v("节点不能发送"),r("code",[e._v("cmpctblock")]),e._v("消息，除非它们能够响应“ getblocktxn”消息，该消息请求块中的每个事务。一个节点不能发送一个“"),r("code",[e._v("cmpctblock")]),e._v("息，除非已经验证了标头正确地提交给块中的每个事务，并且正确地构建在现有的、经过充分验证的链的顶部，具有有效的工作证明，或者作为当前工作量最大的有效链的一部分，或者直接构建在它的顶部。在确认块中的每个事务有效地使用现有的 UTXO 集条目之前，节点可以发送“ "),r("code",[e._v("cmpctblock")]),e._v("。")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" contains a vector of "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[e._v("“PrefilledTransaction”"),r("OutboundLink")],1),e._v(" whose structure is defined below.")]),e._v(" "),r("p",[r("code",[e._v("cmpctblock")]),e._v("消息包含“ prefiledtransaction”的向量，其结构在下面定义。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Bytes字节")]),e._v(" "),r("th",[e._v("Name姓名")]),e._v(" "),r("th",[e._v("Data Type数据类型")]),e._v(" "),r("th",[e._v("Description描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("index索引")]),e._v(" "),r("td",[e._v("compactSize uint紧凑型尺寸")]),e._v(" "),r("td",[e._v("The index into the block at which this transaction is located.此事务所在的块中的索引。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("tx")]),e._v(" "),r("td",[e._v("Transaction交易")]),e._v(" "),r("td",[e._v("The transaction which is in the block at the index.在索引块中的事务。")])])])]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" is compromised of a serialized "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[e._v("“HeaderAndShortIDs”"),r("OutboundLink")],1),e._v(" structure which is defined below. A "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[e._v("“HeaderAndShortIDs”"),r("OutboundLink")],1),e._v(" structure is used to relay a block header, the short transactions IDs used for matching already-available transactions, and a select few transactions which we expect a peer may be missing.")]),e._v(" "),r("p",[r("code",[e._v("cmpctblock")]),e._v("消息是一个序列化的“ HeaderAndShortIDs”结构，该结构在下面定义。“ HeaderAndShortIDs”结构用于中继块头、用于匹配已有可用事务的短事务 id，以及我们预计可能缺少的少数事务。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Bytes字节")]),e._v(" "),r("th",[e._v("Name姓名")]),e._v(" "),r("th",[e._v("Data Type数据类型")]),e._v(" "),r("th",[e._v("Description描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("80")]),e._v(" "),r("td",[e._v("block header集箱")]),e._v(" "),r("td",[e._v("block_header块头")]),e._v(" "),r("td",[e._v("The block header in the format described in the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/block_chain.html#block-headers",target:"_blank",rel:"noopener noreferrer"}},[e._v("block header section"),r("OutboundLink")],1),e._v(".块头部分中描述的格式的块头。")])]),e._v(" "),r("tr",[r("td",[e._v("8图8")]),e._v(" "),r("td",[e._v("nonce现在")]),e._v(" "),r("td",[e._v("uint64_t64t")]),e._v(" "),r("td",[e._v("A nonce for use in short transaction ID calculations.用于短事务 ID 计算的 nonce。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("shortids length短路长度")]),e._v(" "),r("td",[e._v("compactSize uint紧凑型尺寸")]),e._v(" "),r("td",[e._v("The number of short transaction IDs in the following field.下列字段中的短事务 id 数。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("shortids矮子")]),e._v(" "),r("td",[e._v("byte[]字节[]")]),e._v(" "),r("td",[e._v("The short transaction IDs calculated from the transactions which were not provided explicitly in prefilledtxn. Vector of 6-byte integers in the spec, padded with two null-bytes so it can be read as an 8-byte integer. "),r("strong",[e._v("In version 2 of compact blocks, shortids should use the wtxid instead of txid as defined by")]),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP141"),r("OutboundLink")],1),e._v("根据事务计算的短事务 id，在预文件 txn 中没有显式提供。规范中的6字节整数向量，用两个空字节填充，这样它就可以作为一个8字节的整数读取。在紧凑块的版本2中，shortids 应该使用 wtxid 而不是 bip141定义的 txid")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("prefilled txn length预填充 txn 长度")]),e._v(" "),r("td",[e._v("compactSize uint紧凑型尺寸")]),e._v(" "),r("td",[e._v("The number of prefilled transactions in the following field.下面字段中预填充事务的数量。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("prefilled txn预填充的 txn")]),e._v(" "),r("td",[e._v("PrefilledTransaction[]预存档交易[]")]),e._v(" "),r("td",[e._v("Used to provide the coinbase transaction and a select few which we expect a peer may be missing. Vector of "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[e._v("“PrefilledTransaction”"),r("OutboundLink")],1),e._v("structures defined above.用于提供 coinbase 事务和一些我们期望对等方可能缺少的选择项。上面定义的“ prefiledtransaction”结构的向量。")])])])]),e._v(" "),r("p",[r("strong",[e._v("Important")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 70015"),r("OutboundLink")],1),r("strong",[e._v("notes regarding Compact Blocks")])]),e._v(" "),r("p",[e._v("70015版本关于紧凑块的注释")]),e._v(" "),r("p",[e._v("New banning behavior was added to the compact block logic in "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 70015"),r("OutboundLink")],1),e._v(" to prevent node abuse, the new changes are outlined below as defined in "),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP152"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("新的禁止行为被添加到协议版本70015中的紧凑块逻辑中，以防止节点滥用，新的变化概述如下所定义的 BIP152。")]),e._v(" "),r("p",[e._v("Any undefined behavior in this spec may cause failure to transfer block to, peer disconnection by, or self-destruction by the receiving node. A node receiving non-minimally-encoded CompactSize encodings should make a best-effort to eat the sender’s cat.")]),e._v(" "),r("p",[e._v("本规范中的任何未定义行为都可能导致接收节点传输阻塞到、对等断开连接或自毁。接收非最小编码的 CompactSize 编码的节点应尽最大努力吞噬发送方的 cat。")]),e._v(" "),r("p",[e._v("As high-bandwidth mode permits relaying of "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" messages"),r("OutboundLink")],1),e._v(" prior to full validation (requiring only that the block header is valid before relay), nodes SHOULD NOT ban a peer for announcing a new block with a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" that is invalid, but has a valid header.")]),e._v(" "),r("p",[e._v("由于高带宽模式允许在完全验证之前中继"),r("code",[e._v("cmpctblock")]),e._v("消息(只要求在中继之前块头有效) ，因此节点不应禁止对等节点宣布一个新块，该块带有无效的“"),r("code",[e._v("cmpctblock")]),e._v("息，但有一个有效的头。")]),e._v(" "),r("p",[e._v("For avoidance of doubt, nodes SHOULD bump their "),r("a",{attrs:{href:"https://developer.bitcoin.org/devguide/p2p_network.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("peer-to-peer"),r("OutboundLink")],1),e._v(" protocol version to 70015 or higher to signal that they will not ban or punish a peer for announcing compact blocks prior to full validation, and nodes SHOULD NOT announce a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" to a peer with a version number below 70015 before fully validating the block.")]),e._v(" "),r("p",[e._v("为了避免怀疑，节点应该将它们的对等协议版本提高到70015或更高，以表明它们不会禁止或惩罚在完全验证之前宣布紧凑块的对等节点，并且在完全验证块之前，节点不应该向版本号低于70015的对等节点宣布"),r("code",[e._v("cmpctblock")]),e._v("消息。")]),e._v(" "),r("p",[r("strong",[e._v("Version 2 compact blocks notes")])]),e._v(" "),r("p",[e._v("版本2紧凑地阻止注释")]),e._v(" "),r("p",[e._v("Transactions inside "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" messages"),r("OutboundLink")],1),e._v(" (both those used as direct announcement and those in response to getdata) and in "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#blocktxn",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("blocktxn")]),e._v(" messages"),r("OutboundLink")],1),e._v(" should include witness data, using the same format as responses to getdata "),r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-msg-witness-tx",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MSG_WITNESS_TX”"),r("OutboundLink")],1),e._v(", specified in "),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0144.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP144"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[r("code",[e._v("cmpctblock")]),e._v("消息(包括用于直接通知的消息和用于响应 getdata 的消息)和"),r("code",[e._v("blocktxn")]),e._v("消息中的事务应该包括证人数据，使用与在 BIP144中指定的 getdata“ MSG _ witness _ tx”响应相同的格式。")]),e._v(" "),r("p",[e._v("Upon "),r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-receipt",target:"_blank",rel:"noopener noreferrer"}},[e._v("receipt"),r("OutboundLink")],1),e._v(" of a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getdata",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getdata")]),e._v(" message"),r("OutboundLink")],1),e._v(" containing a request for a "),r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-msg-cmpct-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MSG_CMPCT_BLOCK”"),r("OutboundLink")],1),e._v(" object for which a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" is not sent in response, the block message containing the requested block in non-compact form MUST be encoded with witnesses (as is sent in reply to a "),r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-msg-witness-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MSG_WITNESS_BLOCK”"),r("OutboundLink")],1),e._v(") if the protocol version used to encode the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" would have been 2, and encoded without witnesses (as is sent in response to a "),r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-msg-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MSG_BLOCK”"),r("OutboundLink")],1),e._v(") if the protocol version used to encode the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" message"),r("OutboundLink")],1),e._v("would have been 1.")]),e._v(" "),r("p",[e._v("一旦收到"),r("code",[e._v("getdata")]),e._v("消息，其中包含对“ MSG _ cmpct _ block”对象的请求，而"),r("code",[e._v("cmpctblock")]),e._v("消息没有作为响应发送，则包含请求块的非紧凑形式的块消息必须用见证人进行编码(作为对“ MSG _ witness _ block”的回复发送) ，如果用于编码“"),r("code",[e._v("cmpctblock")]),e._v("息的协议版本为2，如果用于编码“ "),r("code",[e._v("cmpctblock")]),e._v("的协议版本为1，则没有见证人进行编码(作为对“ MSG _ block”的回应发送)。")]),e._v(" "),r("p",[r("strong",[e._v("Short Transaction ID calculation")])]),e._v(" "),r("p",[e._v("短期交易 ID 计算")]),e._v(" "),r("p",[e._v("Short transaction IDs are used to represent a transaction without sending a full 256-bit hash. They are calculated as follows,")]),e._v(" "),r("p",[e._v("短事务 id 用于表示不发送完整的256位哈希的事务,")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("A single-SHA256 hashing the block header with the nonce appended (in little-endian)")]),e._v(" "),r("p",[e._v("一个单一的 sha256哈希块头，并附加 nonce (在 little-endian 中)")])]),e._v(" "),r("li",[r("p",[e._v("Running SipHash-2-4 with the input being the transaction ID ("),r("strong",[e._v("wtxid in version 2 of compact blocks")]),e._v(") and the keys (k0/k1) set to the first two little-endian 64-bit integers from the above hash, respectively.")]),e._v(" "),r("p",[e._v("运行 SipHash-2-4，输入为事务 ID (紧凑块版本2中的 wtxid) ，键(k0/k1)分别设置为上述散列的前两个 little-endian 64位整数。")])]),e._v(" "),r("li",[r("p",[e._v("Dropping the 2 most significant bytes from the SipHash output to make it 6 bytes.")]),e._v(" "),r("p",[e._v("从 SipHash 输出中删除2个最重要的字节，使其为6字节。")])]),e._v(" "),r("li",[r("p",[e._v("Two null-bytes appended so it can be read as an 8-byte integer.")]),e._v(" "),r("p",[e._v("附加两个空字节，以便可以读取为一个8字节的整数。")])])]),e._v(" "),r("h3",{attrs:{id:"sendcmpct"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sendcmpct"}},[e._v("#")]),e._v(" SendCmpct")]),e._v(" "),r("p",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 70014"),r("OutboundLink")],1),r("em",[e._v("as described by")]),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP152"),r("OutboundLink")],1),r("em",[e._v(".")])]),e._v(" "),r("p",[e._v("增加了协议版本70014as described by bip152。")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#sendcmpct",target:"_blank",rel:"noopener noreferrer"}},[e._v("“sendcmpct” message"),r("OutboundLink")],1),e._v(" is defined as a message containing a 1-byte integer followed by a 8-byte integer. The first integer is interpreted as a boolean and should have a value of either 1 or 0. The second integer is be interpreted as a little-endian version number.")]),e._v(" "),r("p",[e._v("“ sendcmpct”消息定义为包含一个1字节的整数，后跟一个8字节的整数的消息。第一个整数被解释为一个布尔值，它的值应该是1或0。第二个整数被解释为 little-endian 版本号。")]),e._v(" "),r("p",[e._v("Upon "),r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-receipt",target:"_blank",rel:"noopener noreferrer"}},[e._v("receipt"),r("OutboundLink")],1),e._v(" of a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#sendcmpct",target:"_blank",rel:"noopener noreferrer"}},[e._v("“sendcmpct” message"),r("OutboundLink")],1),e._v(" with the first and second integers set to 1, the node should announce new blocks by sending a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" message"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("当收到第一个和第二个整数设置为1的“ sendcmpct”消息时，节点应该通过发送"),r("code",[e._v("cmpctblock")]),e._v("消息来通知新的块。")]),e._v(" "),r("p",[e._v("Upon "),r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-receipt",target:"_blank",rel:"noopener noreferrer"}},[e._v("receipt"),r("OutboundLink")],1),e._v(" of a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#sendcmpct",target:"_blank",rel:"noopener noreferrer"}},[e._v("“sendcmpct” message"),r("OutboundLink")],1),e._v(" with the first integer set to 0, the node shouldn’t announce new blocks by sending a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" message"),r("OutboundLink")],1),e._v(", but instead announce new blocks by sending invs or headers, as defined by "),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0130.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP130"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("当收到第一个整数设置为0的“ sendcmpct”消息时，节点不应该通过发送"),r("code",[e._v("cmpctblock")]),e._v("消息来通知新块，而是通过发送 invs 或 header 来通知新块，这是由 BIP130定义的。")]),e._v(" "),r("p",[e._v("Upon "),r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-receipt",target:"_blank",rel:"noopener noreferrer"}},[e._v("receipt"),r("OutboundLink")],1),e._v(" of a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#sendcmpct",target:"_blank",rel:"noopener noreferrer"}},[e._v("“sendcmpct” message"),r("OutboundLink")],1),e._v(" with the second integer set to something other than 1, nodes should treat the peer as if they had not received the message (as it indicates the peer will provide an unexpected encoding in "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" messages"),r("OutboundLink")],1),e._v(", and/or other, messages). This allows future versions to send duplicate "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#sendcmpct",target:"_blank",rel:"noopener noreferrer"}},[e._v("“sendcmpct” messages"),r("OutboundLink")],1),e._v(" with different versions as a part of a version handshake for future versions.")]),e._v(" "),r("p",[e._v("当收到第二个整数设置为不是1的“ sendcmpct”消息时，节点应当将对方视为未收到消息(因为它表明对方将在"),r("code",[e._v("cmpctblock")]),e._v("消息和/或其他消息中提供意外的编码)。这允许将来的版本使用不同的版本发送重复的“ sendcmpct”消息，作为将来版本握手的一部分。")]),e._v(" "),r("p",[e._v("Nodes should check for a protocol version of >= 70014 before sending "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#sendcmpct",target:"_blank",rel:"noopener noreferrer"}},[e._v("“sendcmpct” messages"),r("OutboundLink")],1),e._v(". Nodes shouldn’t send a request for a "),r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-msg-cmpct-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MSG_CMPCT_BLOCK”"),r("OutboundLink")],1),e._v(" object to a peer before having received a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#sendcmpct",target:"_blank",rel:"noopener noreferrer"}},[e._v("“sendcmpct” message"),r("OutboundLink")],1),e._v("from that peer. Nodes shouldn’t request a "),r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-msg-cmpct-block",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MSG_CMPCT_BLOCK”"),r("OutboundLink")],1),e._v(" object before having sent all "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#sendcmpct",target:"_blank",rel:"noopener noreferrer"}},[e._v("“sendcmpct” messages"),r("OutboundLink")],1),e._v(" to that peer which they intend to send, as the peer cannot know what version protocol to use in the response.")]),e._v(" "),r("p",[e._v("在发送“ sendcmpct”消息之前，节点应该检查 > = 70014的协议版本。在接收到“ sendcmpct”消息之前，节点不应该向对等节点发送对“ MSG _ cmpct _ block”对象的请求。节点在将所有“ sendcmpct”消息发送给要发送的对等节点之前，不应该请求“ MSG _ cmpct _ block”对象，因为对等节点不知道在响应中使用什么版本的协议。")]),e._v(" "),r("p",[e._v("The structure of a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#sendcmpct",target:"_blank",rel:"noopener noreferrer"}},[e._v("“sendcmpct” message"),r("OutboundLink")],1),e._v(" is defined below.")]),e._v(" "),r("p",[e._v("下面定义了“ sendcmpct”消息的结构。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Bytes字节")]),e._v(" "),r("th",[e._v("Name姓名")]),e._v(" "),r("th",[e._v("Data Type数据类型")]),e._v(" "),r("th",[e._v("Description描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("1")]),e._v(" "),r("td",[e._v("announce宣布")]),e._v(" "),r("td",[e._v("bool布尔")]),e._v(" "),r("td",[e._v("An integer representing a boolean value, must be 0x01 (true) or 0x00 (false).表示布尔值的整数必须是0x01(true)或0x00(false)。")])]),e._v(" "),r("tr",[r("td",[e._v("8图8")]),e._v(" "),r("td",[e._v("version版本")]),e._v(" "),r("td",[e._v("uint64_t64t")]),e._v(" "),r("td",[e._v("A little-endian representation of a version number. "),r("strong",[e._v("Version 2 compact blocks should be specified by setting version to 2")]),e._v("版本号的小尾数表示。版本2紧凑块应该通过将版本设置为2来指定")])])])]),e._v(" "),r("h3",{attrs:{id:"getblocktxn"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#getblocktxn"}},[e._v("#")]),e._v(" GetBlockTxn")]),e._v(" "),r("p",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 70014"),r("OutboundLink")],1),r("em",[e._v("as described by")]),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP152"),r("OutboundLink")],1),r("em",[e._v(".")])]),e._v(" "),r("p",[e._v("增加了协议版本70014as described by bip152。")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getblocktxn",target:"_blank",rel:"noopener noreferrer"}},[e._v("“getblocktxn” message"),r("OutboundLink")],1),e._v(" is defined as a message containing a serialized "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getblocktxn",target:"_blank",rel:"noopener noreferrer"}},[e._v("“BlockTransactionsRequest”"),r("OutboundLink")],1),e._v("message. Upon "),r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-receipt",target:"_blank",rel:"noopener noreferrer"}},[e._v("receipt"),r("OutboundLink")],1),e._v(" of a properly-formatted "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getblocktxn",target:"_blank",rel:"noopener noreferrer"}},[e._v("“getblocktxn” message"),r("OutboundLink")],1),e._v(", nodes which recently provided the sender of such a message a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" for the block hash identified in this message must respond with either an appropriate "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#blocktxn",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("blocktxn")]),e._v(" message"),r("OutboundLink")],1),e._v(", or a full block message.")]),e._v(" "),r("p",[e._v("“ getblocktxn”消息被定义为包含序列化的“ BlockTransactionsRequest”消息的消息。在收到格式正确的“ getblocktxn”消息后，最近为此类消息的发送方提供此消息中标识的块散列的"),r("code",[e._v("cmpctblock")]),e._v("消息的节点必须以适当的"),r("code",[e._v("blocktxn")]),e._v("消息或完整的块消息作出响应。")]),e._v(" "),r("p",[e._v("A "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#blocktxn",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("blocktxn")]),e._v(" message"),r("OutboundLink")],1),e._v(" response must contain exactly and only each transaction which is present in the appropriate block at the index specified in the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getblocktxn",target:"_blank",rel:"noopener noreferrer"}},[e._v("“getblocktxn” message"),r("OutboundLink")],1),e._v(" indexes list, in the order requested.")]),e._v(" "),r("p",[r("code",[e._v("blocktxn")]),e._v("消息响应必须按照请求的顺序，准确且仅包含在“ getblocktxn”消息索引列表中指定的索引处的适当块中的每个事务。")]),e._v(" "),r("p",[e._v("The structure of "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getblocktxn",target:"_blank",rel:"noopener noreferrer"}},[e._v("“BlockTransactionsRequest”"),r("OutboundLink")],1),e._v(" is defined below.")]),e._v(" "),r("p",[e._v("“ BlockTransactionsRequest”的结构定义如下。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Bytes字节")]),e._v(" "),r("th",[e._v("Name姓名")]),e._v(" "),r("th",[e._v("Data Type数据类型")]),e._v(" "),r("th",[e._v("Description描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("32图32")]),e._v(" "),r("td",[e._v("block hash块散列")]),e._v(" "),r("td",[e._v("binary blob二进制斑点")]),e._v(" "),r("td",[e._v("The blockhash of the block which the transactions being requested are in.被请求的交易所在区块的 blockkhash。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("indexes length索引长度")]),e._v(" "),r("td",[e._v("compactSize uint紧凑型尺寸")]),e._v(" "),r("td",[e._v("The number of transactions being requested.被请求的事务数。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("indexes索引")]),e._v(" "),r("td",[e._v("compactSize uint[][]")]),e._v(" "),r("td",[e._v("Vector of compactSize containing the indexes of the transactions being requested in the block. "),r("strong",[e._v("In version 2 of compact blocks, the wtxid should be used instead of the txid as defined by")]),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP141"),r("OutboundLink")],1),e._v("compactSize 的向量，包含块中请求的事务的索引。在紧凑块的版本2中，应该使用 wtxid 而不是 bip141定义的 txid")])])])]),e._v(" "),r("h3",{attrs:{id:"blocktxn"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#blocktxn"}},[e._v("#")]),e._v(" BlockTxn")]),e._v(" "),r("p",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 70014"),r("OutboundLink")],1),r("em",[e._v("as described by")]),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP152"),r("OutboundLink")],1),r("em",[e._v(".")])]),e._v(" "),r("p",[e._v("增加了协议版本70014as described by bip152。")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#blocktxn",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("blocktxn")]),e._v(" message"),r("OutboundLink")],1),e._v(" is defined as a message containing a serialized "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#blocktxn",target:"_blank",rel:"noopener noreferrer"}},[e._v("“BlockTransactions”"),r("OutboundLink")],1),e._v(" message. Upon "),r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-receipt",target:"_blank",rel:"noopener noreferrer"}},[e._v("receipt"),r("OutboundLink")],1),e._v(" of a properly-formatted requested "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#blocktxn",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("blocktxn")]),e._v(" message"),r("OutboundLink")],1),e._v(", nodes should attempt to reconstruct the full block by taking the prefilledtxn transactions from the original "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" and placing them in the marked positions, then for each short transaction ID from the original "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#cmpctblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cmpctblock")]),e._v(" message"),r("OutboundLink")],1),e._v(", in order, find the corresponding transaction either from the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#blocktxn",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("blocktxn")]),e._v(" message"),r("OutboundLink")],1),e._v(" or from other sources and place it in the first available position in the block then once the block has been reconstructed, it shall be processed as normal, keeping in mind that short transaction IDs are expected to occasionally collide, and that nodes must not be penalized for such collisions, wherever they appear.")]),e._v(" "),r("p",[r("code",[e._v("blocktxn")]),e._v("消息被定义为包含序列化的“ BlockTransactions”消息的消息。在收到格式正确的请求“"),r("code",[e._v("blocktxn")]),e._v("息后，节点应该尝试从原始的"),r("code",[e._v("cmpctblock")]),e._v("消息获取预文件 txn 事务并将它们放置在标记位置，然后对于原始的“"),r("code",[e._v("cmpctblock")]),e._v("息中的每个短事务 ID，按顺序从“ "),r("code",[e._v("blocktxn")]),e._v("或其他来源查找相应的事务，并将其放置在块中的第一个可用位置，然后一旦块被重构，它将被正常处理，同时铭记短事务 ID 预计偶尔会发生冲突，而且无论在哪里出现，节点都不能因为这种冲突而受到惩罚。")]),e._v(" "),r("p",[e._v("The structure of "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#blocktxn",target:"_blank",rel:"noopener noreferrer"}},[e._v("“BlockTransactions”"),r("OutboundLink")],1),e._v(" is defined below.")]),e._v(" "),r("p",[e._v("“区块交易”的结构定义如下。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Bytes字节")]),e._v(" "),r("th",[e._v("Name姓名")]),e._v(" "),r("th",[e._v("Data Type数据类型")]),e._v(" "),r("th",[e._v("Description描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("32图32")]),e._v(" "),r("td",[e._v("block hash块散列")]),e._v(" "),r("td",[e._v("binary blob二进制斑点")]),e._v(" "),r("td",[e._v("The blockhash of the block which the transactions being provided are in.提供交易的区块的区块。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("transactions length事务长度")]),e._v(" "),r("td",[e._v("compactSize uint紧凑型尺寸")]),e._v(" "),r("td",[e._v("The number of transactions being provided.所提供的事务数。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("transactions交易")]),e._v(" "),r("td",[e._v("Transactions[]交易[]")]),e._v(" "),r("td",[e._v("Vector of transactions, for an example hexdump of the raw transaction format, see the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/transactions.html#raw-transaction-format",target:"_blank",rel:"noopener noreferrer"}},[e._v("raw transaction section"),r("OutboundLink")],1),e._v(".事务的向量，有关原始事务格式的 hexdump 示例，请参见原始事务部分。")])])])]),e._v(" "),r("h3",{attrs:{id:"notfound"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#notfound"}},[e._v("#")]),e._v(" NotFound")]),e._v(" "),r("p",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 70001"),r("OutboundLink")],1),r("em",[e._v(".")])]),e._v(" "),r("p",[e._v("在协议版本70001中添加。")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#notfound",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("notfound")]),e._v(" message"),r("OutboundLink")],1),e._v(" is a reply to a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getdata",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getdata")]),e._v(" message"),r("OutboundLink")],1),e._v(" which requested an object the receiving node does not have available for relay. (Nodes are not expected to relay historic transactions which are no longer in the memory pool or relay set. Nodes may also have pruned spent transactions from older blocks, making them unable to send those blocks.)")]),e._v(" "),r("p",[r("code",[e._v("notfound")]),e._v("消息是对"),r("code",[e._v("getdata")]),e._v("消息的回复，该消息请求接收节点没有可用于中继的对象。(节点不被期望中继不再在内存池或中继集中的历史事务。节点还可能从较旧的块中删除已使用的事务，使它们无法发送这些块")]),e._v(" "),r("p",[e._v("The format and maximum size limitations of the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#notfound",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("notfound")]),e._v(" message"),r("OutboundLink")],1),e._v(" are identical to the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#inv",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("inv")]),e._v(" message"),r("OutboundLink")],1),e._v("; only the message header differs.")]),e._v(" "),r("p",[r("code",[e._v("notfound")]),e._v("消息的格式和最大大小限制与"),r("code",[e._v("inv")]),e._v("消息相同; 只是消息头不同。")]),e._v(" "),r("h3",{attrs:{id:"tx"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tx"}},[e._v("#")]),e._v(" Tx")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#tx",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("tx")]),e._v(" message"),r("OutboundLink")],1),e._v(" transmits a single transaction in the raw transaction format. It can be sent in a variety of situations;")]),e._v(" "),r("p",[r("code",[e._v("tx")]),e._v("消息以原始事务格式发送单个事务。它可以在各种情况下发送;")]),e._v(" "),r("ul",[r("li",[r("p",[r("strong",[e._v("Transaction Response:")]),e._v(" Bitcoin Core and "),r("a",{attrs:{href:"http://bitcoinj.github.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("BitcoinJ"),r("OutboundLink")],1),e._v(" will send it in response to a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getdata",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getdata")]),e._v(" message"),r("OutboundLink")],1),e._v(" that requests the transaction with an inventory type of "),r("a",{attrs:{href:"https://developer.bitcoin.org/terms.html#term-msg-tx",target:"_blank",rel:"noopener noreferrer"}},[e._v("“MSG_TX”"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("交易响应: 比特币核心和 BitcoinJ 将发送它作为对"),r("code",[e._v("getdata")]),e._v("消息的响应，该消息请求交易的库存类型为“ MSG _ tx”。")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("MerkleBlock Response:")]),e._v(" Bitcoin Core will send it in response to a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getdata",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getdata")]),e._v(" message"),r("OutboundLink")],1),e._v(" that requests a merkle block with an inventory type of "),r("code",[e._v("MSG_MERKLEBLOCK")]),e._v(". (This is in addition to sending a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#merkleblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("merkleblock")]),e._v(" message"),r("OutboundLink")],1),e._v(".) Each "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#tx",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("tx")]),e._v(" message"),r("OutboundLink")],1),e._v(" in this case provides a matched transaction from that block.")]),e._v(" "),r("p",[e._v("默克尔布洛克响应: 比特币核心将发送它作为对"),r("code",[e._v("getdata")]),e._v("消息的响应，该消息请求一个 merkle 块，其库存类型为 MSG _ MerkleBlock。(这是发送"),r("code",[e._v("merkleblock")]),e._v("消息的补充。)在这种情况下，每个"),r("code",[e._v("tx")]),e._v("消息都提供来自该块的匹配事务。")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("Unsolicited:")]),e._v(" "),r("a",{attrs:{href:"http://bitcoinj.github.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("BitcoinJ"),r("OutboundLink")],1),e._v(" will send a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#tx",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("tx")]),e._v(" message"),r("OutboundLink")],1),e._v(" unsolicited for transactions it originates.")]),e._v(" "),r("p",[e._v("未经请求: BitcoinJ 将发送一个"),r("code",[e._v("tx")]),e._v("消息未经请求的交易来源。")])])]),e._v(" "),r("p",[e._v("For an example hexdump of the raw transaction format, see the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/transactions.html#raw-transaction-format",target:"_blank",rel:"noopener noreferrer"}},[e._v("raw transaction section"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("有关原始事务格式的 hexdump 示例，请参见原始事务部分。")]),e._v(" "),r("h2",{attrs:{id:"control-messages"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#control-messages"}},[e._v("#")]),e._v(" Control Messages")]),e._v(" "),r("p",[e._v("The following "),r("a",{attrs:{href:"https://developer.bitcoin.org/devguide/p2p_network.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("network"),r("OutboundLink")],1),e._v(" messages all help control the connection between two peers or allow them to advise each other about the rest of the "),r("a",{attrs:{href:"https://developer.bitcoin.org/devguide/p2p_network.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("network"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("下面的网络消息都有助于控制两个对等点之间的连接，或允许它们互相通知网络的其余部分。")]),e._v(" "),r("p",[r("img",{staticClass:"lazy",attrs:{alt:"Overview Of P2P Protocol Control And Advisory Messages","data-src":"https://developer.bitcoin.org/_images/en-p2p-control-messages.svg",loading:"lazy"}})]),e._v(" "),r("p",[e._v("Overview Of P2P Protocol Control And Advisory Messages"),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#id4",title:"Permalink to this image",target:"_blank",rel:"noopener noreferrer"}},[r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("P2P 协议控制与咨询消息综述")]),e._v(" "),r("p",[e._v("Note that almost none of the control messages are authenticated in any way, meaning they can contain incorrect or intentionally harmful information. In addition, this section does not yet cover P2P protocol operation over the "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Tor_%28anonymity_network%29",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tor network"),r("OutboundLink")],1),e._v("; if you would like to contribute information about Tor, please "),r("a",{attrs:{href:"https://github.com/bitcoin-dot-org/bitcoin.org/issues",target:"_blank",rel:"noopener noreferrer"}},[e._v("open an issue"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("请注意，几乎没有任何控制消息以任何方式进行身份验证，这意味着它们可能包含不正确或有意的有害信息。此外，本节还不包括 Tor 网络上的 P2P 协议操作; 如果您想提供有关 Tor 的信息，请打开一个问题。")]),e._v(" "),r("h3",{attrs:{id:"addr"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#addr"}},[e._v("#")]),e._v(" Addr")]),e._v(" "),r("p",[e._v("The "),r("code",[e._v("addr")]),e._v(" (IP address) message relays connection information for peers on the "),r("a",{attrs:{href:"https://developer.bitcoin.org/devguide/p2p_network.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("network"),r("OutboundLink")],1),e._v(". Each peer which wants to accept incoming connections creates an "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#addr",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("addr")]),e._v(" message"),r("OutboundLink")],1),e._v(" providing its connection information and then sends that message to its peers unsolicited. Some of its peers send that information to their peers (also unsolicited), some of which further distribute it, allowing decentralized peer discovery for any program already on the "),r("a",{attrs:{href:"https://developer.bitcoin.org/devguide/p2p_network.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("network"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("Addr (IP 地址)消息为网络上的对等点中继连接信息。每个希望接受传入连接的对等点创建一个"),r("code",[e._v("addr")]),e._v("消息，提供其连接信息，然后将该消息未经请求地发送给它的对等点。其中一些节点将这些信息发送给它们的节点(也是未经请求的) ，其中一些节点进一步分发这些信息，允许对网络上已经存在的任何程序进行分散的节点发现。")]),e._v(" "),r("p",[e._v("An "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#addr",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("addr")]),e._v(" message"),r("OutboundLink")],1),e._v(" may also be sent in response to a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getaddr",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getaddr")]),e._v(" message"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("也可以发送"),r("code",[e._v("addr")]),e._v("消息来响应"),r("code",[e._v("getaddr")]),e._v("消息。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Bytes字节")]),e._v(" "),r("th",[e._v("Name姓名")]),e._v(" "),r("th",[e._v("Data Type数据类型")]),e._v(" "),r("th",[e._v("Description描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("IP address countIP 地址计数")]),e._v(" "),r("td",[e._v("compactSize uint紧凑型尺寸")]),e._v(" "),r("td",[e._v("The number of IP address entries up to a maximum of 1,000.最多为1,000的 IP 地址条目的数量。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("IP addressesIP 地址")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://developer.bitcoin.org/devguide/p2p_network.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("network"),r("OutboundLink")],1),e._v(" IP address网络 IP 地址")]),e._v(" "),r("td",[e._v("IP address entries. See the table below for the format of a Bitcoin "),r("a",{attrs:{href:"https://developer.bitcoin.org/devguide/p2p_network.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("network"),r("OutboundLink")],1),e._v(" IP address.IP 地址条目。有关比特币网络 IP 地址的格式，请参阅下表。")])])])]),e._v(" "),r("p",[e._v("Each encapsulated "),r("a",{attrs:{href:"https://developer.bitcoin.org/devguide/p2p_network.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("network"),r("OutboundLink")],1),e._v(" IP address currently uses the following structure:")]),e._v(" "),r("p",[e._v("每个封装的网络 IP 地址目前使用以下结构:")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Bytes字节")]),e._v(" "),r("th",[e._v("Name姓名")]),e._v(" "),r("th",[e._v("Data Type数据类型")]),e._v(" "),r("th",[e._v("Description描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("4图4")]),e._v(" "),r("td",[e._v("time时间")]),e._v(" "),r("td",[e._v("uint32")]),e._v(" "),r("td",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 31402"),r("OutboundLink")],1),r("em",[e._v(".")]),e._v(" A time in "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Unix_time",target:"_blank",rel:"noopener noreferrer"}},[e._v("Unix epoch time"),r("OutboundLink")],1),e._v(" format. Nodes advertising their own IP address set this to the current time. Nodes advertising IP addresses they’ve connected to set this to the last time they connected to that node. Other nodes just relaying the IP address should not change the time. Nodes can use the time field to avoid relaying old "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#addr",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("addr")]),e._v(" messages"),r("OutboundLink")],1),e._v(". Malicious nodes may change times or even set them in the future.增加了协议版本31402。一种 Unix 新纪元时间格式的时间。宣布自己 IP 地址的节点将此设置为当前时间。宣布已连接的 IP 地址的节点将其设置为最后一次连接到该节点。其他只转发 IP 地址的节点不应该改变时间。节点可以使用时间域来避免转发旧的"),r("code",[e._v("addr")]),e._v("消息。恶意节点可能会改变时间，甚至在将来设置时间。")])]),e._v(" "),r("tr",[r("td",[e._v("8图8")]),e._v(" "),r("td",[e._v("services服务")]),e._v(" "),r("td",[e._v("uint64_t64t")]),e._v(" "),r("td",[e._v("The services the node advertised in its "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#version",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("version")]),e._v(" message"),r("OutboundLink")],1),e._v(".在其“版本”消息中公布的节点的服务。")])]),e._v(" "),r("tr",[r("td",[e._v("16图16")]),e._v(" "),r("td",[e._v("IP addressIP 地址")]),e._v(" "),r("td",[e._v("char[16][16]")]),e._v(" "),r("td",[e._v("IPv6 address in "),r("strong",[e._v("big endian byte order")]),e._v(". IPv4 addresses can be provided as "),r("a",{attrs:{href:"http://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses",target:"_blank",rel:"noopener noreferrer"}},[e._v("IPv4-mapped IPv6 addresses"),r("OutboundLink")],1),e._v("IPv6地址以大端字节顺序提供。 IPv4地址可以作为 IPv4映射的 IPv6地址提供")])]),e._v(" "),r("tr",[r("td",[e._v("2图2")]),e._v(" "),r("td",[e._v("port港口")]),e._v(" "),r("td",[e._v("uint16_t16t")]),e._v(" "),r("td",[e._v("Port number in "),r("strong",[e._v("big endian byte order")]),e._v(". Note that Bitcoin Core will only connect to nodes with non-standard port numbers as a last resort for finding peers. This is to prevent anyone from trying to use the "),r("a",{attrs:{href:"https://developer.bitcoin.org/devguide/p2p_network.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("network"),r("OutboundLink")],1),e._v(" to disrupt non-Bitcoin services that run on other ports.端口号以大端字节顺序排列。请注意，比特币核心将只连接到非标准端口号的节点，作为寻找对等点的最后手段。这是为了防止任何人试图使用该网络破坏在其他端口上运行的非比特币服务。")])])])]),e._v(" "),r("p",[e._v("The following annotated hexdump shows part of an "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#addr",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("addr")]),e._v(" message"),r("OutboundLink")],1),e._v(". (The message header has been omitted and the actual IP address has been replaced with a "),r("a",{attrs:{href:"http://tools.ietf.org/html/rfc5737",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC5737"),r("OutboundLink")],1),e._v(" reserved IP address.)")]),e._v(" "),r("p",[e._v("下面带注释的 hexdump 显示了"),r("code",[e._v("addr")]),e._v("消息的一部分。(消息头被省略，实际 IP 地址被 RFC5737保留 IP 地址替换。)")]),e._v(" "),r("p",[e._v("fde803 ............................. Address count: 1000\nd91f4854 ........................... [Epoch time][unix epoch time]: 1414012889\n0100000000000000 ................... Service bits: 01 ([network][network] node)\n00000000000000000000ffffc0000233 ... IP Address: ::ffff:192.0.2.51\n208d ............................... Port: 8333\n[...] .............................. (999 more addresses omitted)")]),e._v(" "),r("h3",{attrs:{id:"alert"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#alert"}},[e._v("#")]),e._v(" Alert")]),e._v(" "),r("p",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 311"),r("OutboundLink")],1),r("em",[e._v(".")]),e._v(" "),r("em",[e._v("Removed in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 70013"),r("OutboundLink")],1),r("em",[e._v("and released in")]),r("a",{attrs:{href:"https://bitcoin.org/en/release/v0.13.0",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitcoin Core 0.13.0"),r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("在协议版本311中添加，在协议版本70013中删除，在比特币核心0.13.0中发布")]),e._v(" "),r("p",[e._v("The legacy p2p "),r("a",{attrs:{href:"https://developer.bitcoin.org/devguide/p2p_network.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("network"),r("OutboundLink")],1),e._v(" alert messaging system has been retired; however, internal alerts, partition detection warnings and the "),r("code",[e._v("-alertnotify")]),e._v(" option features remain. See "),r("a",{attrs:{href:"https://bitcoin.org/en/alert/2016-11-01-alert-retirement",target:"_blank",rel:"noopener noreferrer"}},[e._v("Alert System Retirement"),r("OutboundLink")],1),e._v(" for details.")]),e._v(" "),r("p",[e._v("遗留的 p2p 网络警报消息传递系统已经退役; 但是，内部警报、分区检测警告和-alertnotify 选项特性仍然保留。详情请参阅警报系统退休。")]),e._v(" "),r("h3",{attrs:{id:"feefilter"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#feefilter"}},[e._v("#")]),e._v(" FeeFilter")]),e._v(" "),r("p",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 70013"),r("OutboundLink")],1),r("em",[e._v("as described by")]),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0133.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP133"),r("OutboundLink")],1),r("em",[e._v(".")])]),e._v(" "),r("p",[e._v("在协议版本70013中添加，如 bip133所描述。")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#feefilter",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("feefilter")]),e._v(" message"),r("OutboundLink")],1),e._v(" is a request to the receiving peer to not relay any transaction inv messages to the sending peer where the fee rate for the transaction is below the fee rate specified in the feefilter message.")]),e._v(" "),r("p",[r("code",[e._v("feefilter")]),e._v("消息是对接收端的一个请求，要求它不要将任何交易转发给发送端，因为该交易的费率低于“"),r("code",[e._v("feefilter")]),e._v("息中指定的费率。")]),e._v(" "),r("p",[r("code",[e._v("feefilter")]),e._v(" was introduced in "),r("a",{attrs:{href:"https://bitcoin.org/en/release/v0.13.0",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitcoin Core 0.13.0"),r("OutboundLink")],1),e._v(" following the introduction of mempool limiting in "),r("a",{attrs:{href:"https://bitcoin.org/en/release/v0.12.0",target:"_blank",rel:"noopener noreferrer"}},[e._v("Bitcoin Core 0.12.0"),r("OutboundLink")],1),e._v(". Mempool limiting provides protection against attacks and spam transactions that have low fee rates and are unlikely to be included in mined blocks. The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#feefilter",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("feefilter")]),e._v(" messages"),r("OutboundLink")],1),e._v(" allows a node to inform its peers that it will not accept transactions below a specified fee rate into its mempool, and therefore that the peers can skip relaying inv messages for transactions below that fee rate to that node.")]),e._v(" "),r("p",[e._v("在引入了比特币核心0.12.0的 mempool 限制之后，比特币核心0.13.0引入了 feefilter。内存池限制提供了针对攻击和垃圾邮件交易的保护，这些攻击和垃圾邮件交易的费用较低，不太可能包含在雷区块中。"),r("code",[e._v("feefilter")]),e._v("消息允许一个节点通知其对等节点，它将不接受低于指定费率的交易进入其记忆池，因此对等节点可以跳过将低于该费率的交易转发到该节点。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Bytes字节")]),e._v(" "),r("th",[e._v("Name姓名")]),e._v(" "),r("th",[e._v("Data Type数据类型")]),e._v(" "),r("th",[e._v("Description描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("8图8")]),e._v(" "),r("td",[e._v("feerate发热")]),e._v(" "),r("td",[e._v("uint64_t64t")]),e._v(" "),r("td",[e._v("The fee rate (in satoshis per kilobyte) below which transactions should not be relayed to this peer.费率(以 satoshis/kb 为单位) ，低于该费率的交易不应转发到该对等方。")])])])]),e._v(" "),r("p",[e._v("The receiving peer may choose to ignore the message and not filter transaction inv messages.")]),e._v(" "),r("p",[e._v("接收端可以选择忽略消息，而不过滤 v 消息中的事务。")]),e._v(" "),r("p",[e._v("The fee filter is additive with bloom filters. If an SPV client loads a bloom filter and sends a feefilter message, transactions should only be relayed if they pass both filters.")]),e._v(" "),r("p",[e._v("该费用过滤器是附加的布鲁姆过滤器。如果一个 SPV 客户端加载了一个 bloom filter 并发送了一个 feefilter 消息，那么只有事务同时通过两个过滤器才应该被中继。")]),e._v(" "),r("p",[e._v("Note however that feefilter has no effect on block propagation or responses to getdata messages. For example, if a node requests a merkleblock from its peer by sending a getdata message with inv type MSG_FILTERED_BLOCK and it has previously sent a feefilter to that peer, the peer should respond with a merkleblock containing "),r("em",[e._v("all")]),e._v(" the transactions matching the bloom filter, even if they are below the feefilter fee rate.")]),e._v(" "),r("p",[e._v("但是请注意，feefilter 对块传播或对获取数据消息的响应没有影响。例如，如果一个节点通过发送带有 inv 类型 MSG filtered block 的 getdata 消息来请求一个 merkleblock，并且它之前已经向该节点发送了一个 feefilter，那么该节点应该用一个 merkleblock 来响应，该 merkleblock 包含所有匹配 bloom filter 的事务，即使它们低于 feefilter fee 费率。")]),e._v(" "),r("p",[e._v("inv messages generated from a mempool message are subject to a fee filter if it exists.")]),e._v(" "),r("p",[e._v("从 mempool 消息生成的 inv 消息如果存在的话，将接受一个费用过滤器。")]),e._v(" "),r("p",[e._v("The annotated hexdump below shows a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#feefilter",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("feefilter")]),e._v(" message"),r("OutboundLink")],1),e._v(". (The message header has been omitted.)")]),e._v(" "),r("p",[e._v("下面带注释的 hexdump 显示了一个"),r("code",[e._v("feefilter")]),e._v("消息(消息头被省略了。)")]),e._v(" "),r("p",[e._v("7cbd000000000000 ... satoshis per kilobyte: 48,508")]),e._v(" "),r("h3",{attrs:{id:"filteradd"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#filteradd"}},[e._v("#")]),e._v(" FilterAdd")]),e._v(" "),r("p",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 70001"),r("OutboundLink")],1),r("em",[e._v("as described by")]),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP37"),r("OutboundLink")],1),r("em",[e._v(".")])]),e._v(" "),r("p",[e._v("增加了协议版本70001，如 bip37所描述。")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#filteradd",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("filteradd")]),e._v(" message"),r("OutboundLink")],1),e._v(" tells the receiving peer to add a single element to a previously-set bloom filter, such as a new public key. The element is sent directly to the receiving peer; the peer then uses the parameters set in the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#filterload",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("filterload")]),e._v(" message"),r("OutboundLink")],1),e._v(" to add the element to the bloom filter.")]),e._v(" "),r("p",[r("code",[e._v("filteradd")]),e._v("消息告诉接收端向以前设置的 bloom 筛选器添加单个元素，例如新的公钥。元素被直接发送到接收对等点; 然后对等点使用在"),r("code",[e._v("filterload")]),e._v("消息中设置的参数将元素添加到 bloom 过滤器中。")]),e._v(" "),r("p",[e._v("Because the element is sent directly to the receiving peer, there is no obfuscation of the element and none of the plausible-deniability privacy provided by the bloom filter. Clients that want to maintain greater privacy should recalculate the bloom filter themselves and send a new "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#filterload",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("filterload")]),e._v(" message"),r("OutboundLink")],1),e._v(" with the recalculated bloom filter.")]),e._v(" "),r("p",[e._v("因为元素被直接发送到接收端，所以元素不会被模糊，也没有 bloom 过滤器提供的貌似合理的可否认隐私。想要保持更大隐私的客户应该自己重新计算布鲁姆过滤器，并用重新计算的布鲁姆过滤器发送一个新的“过滤加载”消息。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Bytes字节")]),e._v(" "),r("th",[e._v("Name姓名")]),e._v(" "),r("th",[e._v("Data Type数据类型")]),e._v(" "),r("th",[e._v("Description描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("element bytes元素字节")]),e._v(" "),r("td",[e._v("compactSize uint紧凑型尺寸")]),e._v(" "),r("td",[e._v("The number of bytes in the following element field.下列元素字段中的字节数。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("element元素")]),e._v(" "),r("td",[e._v("uint8_t[][]")]),e._v(" "),r("td",[e._v("The element to add to the current filter. Maximum of 520 bytes, which is the maximum size of an element which can be pushed onto the stack in a pubkey or signature script. Elements must be sent in the byte order they would use when appearing in a raw transaction; for example, hashes should be sent in internal byte order.要添加到当前筛选器的元素。最大520字节，这是可以在 pubkey 或签名脚本中推入堆栈的元素的最大大小。元素必须以它们在原始事务中出现时使用的字节顺序发送; 例如，哈希值应该以内部字节顺序发送。")])])])]),e._v(" "),r("p",[e._v("Note: a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#filteradd",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("filteradd")]),e._v(" message"),r("OutboundLink")],1),e._v(" will not be accepted unless a filter was previously set with the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#filterload",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("filterload")]),e._v(" message"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("注意: "),r("code",[e._v("filteradd")]),e._v("消息将不被接受，除非以前用"),r("code",[e._v("filterload")]),e._v("消息设置过滤器。")]),e._v(" "),r("p",[e._v("The annotated hexdump below shows a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#filteradd",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("filteradd")]),e._v(" message"),r("OutboundLink")],1),e._v(" adding a TXID. (The message header has been omitted.) This TXID appears in the same block used for the example hexdump in the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#merkleblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("merkleblock")]),e._v(" message"),r("OutboundLink")],1),e._v("; if that "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#merkleblock",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("merkleblock")]),e._v(" message"),r("OutboundLink")],1),e._v(" is re-sent after sending this "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#filteradd",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("filteradd")]),e._v(" message"),r("OutboundLink")],1),e._v(", six hashes are returned instead of four.")]),e._v(" "),r("p",[e._v("下面带注释的 hexdump 显示了添加 TXID 的"),r("code",[e._v("filteradd")]),e._v("消息。(消息头被省略了。)这个 TXID 出现在"),r("code",[e._v("merkleblock")]),e._v("消息中示例 hexdump 使用的相同块中; 如果在发送此“"),r("code",[e._v("filteradd")]),e._v("息后重新发送“"),r("code",[e._v("merkleblock")]),e._v("息，则返回六个散列，而不是四个。")]),e._v(" "),r("p",[e._v("20 ................................. Element bytes: 32\nfdacf9b3eb077412e7a968d2e4f11b9a\n9dee312d666187ed77ee7d26af16cb0b ... Element (A TXID)")]),e._v(" "),r("h3",{attrs:{id:"filterclear"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#filterclear"}},[e._v("#")]),e._v(" FilterClear")]),e._v(" "),r("p",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 70001"),r("OutboundLink")],1),r("em",[e._v("as described by")]),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP37"),r("OutboundLink")],1),r("em",[e._v(".")])]),e._v(" "),r("p",[e._v("增加了协议版本70001，如 bip37所描述。")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#filterclear",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("filterclear")]),e._v(" message"),r("OutboundLink")],1),e._v(" tells the receiving peer to remove a previously-set bloom filter. This also undoes the effect of setting the relay field in the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#version",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("version")]),e._v(" message"),r("OutboundLink")],1),e._v(" to 0, allowing unfiltered access to "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#inv",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("inv")]),e._v(" messages"),r("OutboundLink")],1),e._v("announcing new transactions.")]),e._v(" "),r("p",[r("code",[e._v("filterclear")]),e._v("消息告诉接收端删除以前设置的 bloom 筛选器。这还取消了将"),r("code",[e._v("version")]),e._v("消息中的中继字段设置为0的效果，允许未经过滤的访问"),r("code",[e._v("inv")]),e._v("消息，以宣布新的事务。")]),e._v(" "),r("p",[e._v("Bitcoin Core does not require a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#filterclear",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("filterclear")]),e._v(" message"),r("OutboundLink")],1),e._v(" before a replacement filter is loaded with "),r("code",[e._v("filterload")]),e._v(". It also doesn’t require a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#filterload",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("filterload")]),e._v(" message"),r("OutboundLink")],1),e._v(" before a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#filterclear",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("filterclear")]),e._v(" message"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("比特币核心在替换过滤器加载过滤负载之前不需要“过滤/清除”消息。它也不需要在"),r("code",[e._v("filterclear")]),e._v("消息之前提供"),r("code",[e._v("filterload")]),e._v("消息。")]),e._v(" "),r("p",[e._v("There is no payload in a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#filterclear",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("filterclear")]),e._v(" message"),r("OutboundLink")],1),e._v(". See the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#message-headers",target:"_blank",rel:"noopener noreferrer"}},[e._v("message header section"),r("OutboundLink")],1),e._v(" for an example of a message without a payload.")]),e._v(" "),r("p",[e._v("在"),r("code",[e._v("filterclear")]),e._v("消息中没有有效负载。有关无负载消息的示例，请参见消息头部分。")]),e._v(" "),r("h3",{attrs:{id:"filterload"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#filterload"}},[e._v("#")]),e._v(" FilterLoad")]),e._v(" "),r("p",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 70001"),r("OutboundLink")],1),r("em",[e._v("as described by")]),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP37"),r("OutboundLink")],1),r("em",[e._v(".")])]),e._v(" "),r("p",[e._v("增加了协议版本70001，如 bip37所描述。")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#filterload",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("filterload")]),e._v(" message"),r("OutboundLink")],1),e._v(" tells the receiving peer to filter all relayed transactions and requested merkle blocks through the provided filter. This allows clients to receive transactions relevant to their wallet plus a configurable rate of false positive transactions which can provide plausible-deniability privacy.")]),e._v(" "),r("p",[r("code",[e._v("filterload")]),e._v("消息告诉接收端过滤所有中继事务，并通过提供的过滤器请求 merkle 块。这使得客户可以接收与他们的钱包相关的交易，以及一个可配置的假阳性交易率，这可以提供貌似合理的否认隐私。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Bytes字节")]),e._v(" "),r("th",[e._v("Name姓名")]),e._v(" "),r("th",[e._v("Data Type数据类型")]),e._v(" "),r("th",[e._v("Description描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("nFilterBytes")]),e._v(" "),r("td",[e._v("compactSize uint紧凑型尺寸")]),e._v(" "),r("td",[e._v("Number of bytes in the following filter bit field.下列筛选器位字段中的字节数。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("filter过滤器")]),e._v(" "),r("td",[e._v("uint8_t[][]")]),e._v(" "),r("td",[e._v("A bit field of arbitrary byte-aligned size. The maximum size is 36,000 bytes.任意字节对齐大小的位字段。最大大小为36,000字节。")])]),e._v(" "),r("tr",[r("td",[e._v("4图4")]),e._v(" "),r("td",[e._v("nHashFuncs国家人权机构")]),e._v(" "),r("td",[e._v("uint32_t32t")]),e._v(" "),r("td",[e._v("The number of hash functions to use in this filter. The maximum value allowed in this field is 50.要在此筛选器中使用的散列函数数目。该字段允许的最大值为50。")])]),e._v(" "),r("tr",[r("td",[e._v("4图4")]),e._v(" "),r("td",[e._v("nTweak")]),e._v(" "),r("td",[e._v("uint32_t32t")]),e._v(" "),r("td",[e._v("An arbitrary value to add to the seed value in the hash function used by the bloom filter.要添加到 bloom 筛选器使用的哈希函数中的种子值的任意值。")])]),e._v(" "),r("tr",[r("td",[e._v("1")]),e._v(" "),r("td",[e._v("nFlags")]),e._v(" "),r("td",[e._v("uint8_t我不知道")]),e._v(" "),r("td",[e._v("A set of flags that control how outpoints corresponding to a matched pubkey script are added to the filter. See the table in the Updating A Bloom Filter subsection below.一组标志，用于控制如何向筛选器添加与匹配的 pubkey 脚本相对应的断点。请参阅下面更新布鲁姆过滤器小节中的表格。")])])])]),e._v(" "),r("p",[e._v("The annotated hexdump below shows a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#filterload",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("filterload")]),e._v(" message"),r("OutboundLink")],1),e._v(". (The message header has been omitted.) For an example of how this payload was created, see the "),r("a",{attrs:{href:"https://developer.bitcoin.org/examples/p2p_networking.html#creating-a-bloom-filter",target:"_blank",rel:"noopener noreferrer"}},[e._v("filterload example"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("下面带注释的 hexdump 显示了一条"),r("code",[e._v("filterload")]),e._v("消息。(消息头被省略了。)有关如何创建此有效负载的示例，请参见过滤加载示例。")]),e._v(" "),r("p",[e._v("02 ......... Filter bytes: 2\nb50f ....... Filter: 1010 1101 1111 0000\n0b000000 ... nHashFuncs: 11\n00000000 ... nTweak: 0/none\n00 ......... nFlags: BLOOM_UPDATE_NONE")]),e._v(" "),r("p",[r("strong",[e._v("Initializing A Bloom Filter")])]),e._v(" "),r("p",[e._v("初始化 Bloom Filter")]),e._v(" "),r("p",[e._v("Filters have two core parameters: the size of the bit field and the number of hash functions to run against each data element. The following formulas from "),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP37"),r("OutboundLink")],1),e._v(" will allow you to automatically select appropriate values based on the number of elements you plan to insert into the filter ("),r("em",[e._v("n")]),e._v(") and the false positive rate ("),r("em",[e._v("p")]),e._v(") you desire to maintain plausible deniability.")]),e._v(" "),r("p",[e._v("过滤器有两个核心参数: 位字段的大小和针对每个数据元素运行的散列函数的数量。根据你计划插入到过滤器中的元素数量(n)和你希望保持的假阳性率(p) ，BIP37中的以下公式可以让你自动选择合适的似是而非的否认。")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("Size of the bit field in bytes ("),r("em",[e._v("nFilterBytes")]),e._v("), up to a maximum of 36,000: "),r("code",[e._v("(-1 / log(2)**2 * n *log(p)) / 8")])]),e._v(" "),r("p",[e._v("位域的字节大小(nFilterBytes) ，最大为36,000: (- 1/log (2) * * 2 * n * log (p))/8")])]),e._v(" "),r("li",[r("p",[e._v("Hash functions to use ("),r("em",[e._v("nHashFuncs")]),e._v("), up to a maximum of 50: "),r("code",[e._v("nFilterBytes * 8 / n * log(2)")])]),e._v(" "),r("p",[e._v("要使用的散列函数(nHashFuncs) ，最多为50: nFilterBytes * 8/n * log (2)")])])]),e._v(" "),r("p",[e._v("Note that the filter matches parts of transactions (transaction elements), so the false positive rate is relative to the number of elements checked—not the number of transactions checked. Each normal transaction has a minimum of four matchable elements (described in the comparison subsection below), so a filter with a false-positive rate of 1 percent will match about 4 percent of all transactions at a minimum.")]),e._v(" "),r("p",[e._v("请注意，过滤器匹配部分事务(事务元素) ，因此假阳性率是相对于检查的元素数量而言的，而不是检查的事务数量。每个正常事务至少有四个可匹配元素(在下面的比较小节中进行描述) ，因此，假阳性率为1% 的筛选器至少将匹配所有事务的4% 。")]),e._v(" "),r("p",[e._v("According to "),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP37"),r("OutboundLink")],1),e._v(", the formulas and limits described above provide support for bloom filters containing 20,000 items with a false positive rate of less than 0.1 percent or 10,000 items with a false positive rate of less than 0.0001 percent.")]),e._v(" "),r("p",[e._v("根据 BIP37的说法，上述公式和限制为 bloom filters 提供了支持，这些 bloom filters 包含20,000个虚假阳性率小于0.1% 的项目，或者10,000个虚假阳性率小于0.0001% 的项目。")]),e._v(" "),r("p",[e._v("Once the size of the bit field is known, the bit field should be initialized as all zeroes.")]),e._v(" "),r("p",[e._v("一旦知道了位字段的大小，就应该将位字段初始化为所有零。")]),e._v(" "),r("p",[r("strong",[e._v("Populating A Bloom Filter")])]),e._v(" "),r("p",[e._v("填充一个花朵过滤器")]),e._v(" "),r("p",[e._v("The bloom filter is populated using between 1 and 50 unique hash functions (the number specified per filter by the "),r("em",[e._v("nHashFuncs")]),e._v(" field). Instead of using up to 50 different hash function implementations, a single implementation is used with a unique seed value for each function.")]),e._v(" "),r("p",[e._v("Bloom 过滤器使用1到50个唯一的散列函数(nHashFuncs 字段为每个过滤器指定的数字)填充。与使用多达50种不同的散列函数实现不同，单个实现为每个函数使用唯一的种子值。")]),e._v(" "),r("p",[e._v("The seed is "),r("code",[e._v("nHashNum * 0xfba4c795 + nTweak")]),e._v(" as a "),r("em",[e._v("uint32_t")]),e._v(", where the values are:")]),e._v(" "),r("p",[e._v("种子是 nHashNum * 0xfba4c795 + nTweak as a uint32 t，其中的值是:")]),e._v(" "),r("ul",[r("li",[r("p",[r("strong",[e._v("nHashNum")]),e._v(" is the sequence number for this hash function, starting at 0 for the first hash iteration and increasing up to the value of the "),r("em",[e._v("nHashFuncs")]),e._v(" field (minus one) for the last hash iteration.")]),e._v(" "),r("p",[e._v("nHashNum 是这个 hash 函数的序列号，在第一次 hash 迭代中从0开始，在最后一次 hash 迭代中增加到 nHashFuncs 字段的值(减1)。")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("0xfba4c795")]),e._v(" is a constant optimized to create large differences in the seed for different values of "),r("em",[e._v("nHashNum")]),e._v(".")]),e._v(" "),r("p",[e._v("0xfba4c795是一个常量优化，以创建不同的 nHashNum 值在种子大的差异。")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("nTweak")]),e._v(" is a per-filter constant set by the client to require the use of an arbitrary set of hash functions.")]),e._v(" "),r("p",[e._v("nTweak 是由客户机设置的每个过滤器常量，用于要求使用任意一组散列函数。")])])]),e._v(" "),r("p",[e._v("If the seed resulting from the formula above is larger than four bytes, it must be truncated to its four most significant bytes (for example, "),r("code",[e._v("0x8967452301 & 0xffffffff → 0x67452301")]),e._v(").")]),e._v(" "),r("p",[e._v("如果由上面的公式产生的种子大于4个字节，则必须将其截断为其最有意义的4个字节(例如，0x8967452301 & 0xffffffff →0x67452301)。")]),e._v(" "),r("p",[e._v("The actual hash function implementation used is the "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/MurmurHash",target:"_blank",rel:"noopener noreferrer"}},[e._v("32-bit Murmur3 hash function"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("实际使用的散列函数实现是32位 Murmur3散列函数。")]),e._v(" "),r("p",[r("img",{staticClass:"lazy",attrs:{alt:"Warning icon","data-src":"https://developer.bitcoin.org/_images/icon_warning.svg",loading:"lazy"}}),e._v(" "),r("strong",[e._v("Warning:")]),e._v(" the Murmur3 hash function has separate 32-bit and 64-bit versions that produce different results for the same input. Only the 32-bit Murmur3 version is used with Bitcoin bloom filters.")]),e._v(" "),r("p",[e._v("警告: Murmur3散列函数具有单独的32位和64位版本，对于相同的输入会产生不同的结果。只有32位 Murmur3版本与比特币开花过滤器一起使用。")]),e._v(" "),r("p",[e._v("The data to be hashed can be any transaction element which the bloom filter can match. See the next subsection for the list of transaction elements checked against the filter. The largest element which can be matched is a script data push of 520 bytes, so the data should never exceed 520 bytes.")]),e._v(" "),r("p",[e._v("要散列的数据可以是 bloom 筛选器可以匹配的任何事务元素。有关根据筛选器检查的事务元素列表，请参阅下一小节。可以匹配的最大元素是520字节的脚本数据推送，因此数据不应超过520字节。")]),e._v(" "),r("p",[e._v("The example below from Bitcoin Core "),r("a",{attrs:{href:"https://github.com/bitcoin/bitcoin/blob/cbf28c6619fe348a258dfd7d08bdbd2392d07511/src/bloom.cpp#L46",target:"_blank",rel:"noopener noreferrer"}},[e._v("bloom.cpp"),r("OutboundLink")],1),e._v(" combines all the steps above to create the hash function template. The seed is the first parameter; the data to be hashed is the second parameter. The result is a uint32_t modulo the size of the bit field in bits.")]),e._v(" "),r("p",[e._v("下面的例子来自比特币核心 bloom.cpp，它结合了上面的所有步骤来创建散列函数模板。Seed 是第一个参数; 要散列的数据是第二个参数。结果是以位为单位的 uint32 _ t 模块化位域的大小。")]),e._v(" "),r("p",[e._v("MurmurHash3(nHashNum * 0xFBA4C795 + nTweak, vDataToHash) % (vData.size() * 8)")]),e._v(" "),r("p",[e._v("Each data element to be added to the filter is hashed by "),r("em",[e._v("nHashFuncs")]),e._v(" number of hash functions. Each time a hash function is run, the result will be the index number ("),r("em",[e._v("nIndex")]),e._v(") of a bit in the bit field. That bit must be set to 1. For example if the filter bit field was "),r("code",[e._v("00000000")]),e._v(" and the result is 5, the revised filter bit field is "),r("code",[e._v("00000100")]),e._v(" (the first bit is bit 0).")]),e._v(" "),r("p",[e._v("每个要添加到过滤器的数据元素都由 nHashFuncs 数的散列函数散列。每次运行哈希函数时，结果将是位字段中一个位的索引号(nIndex)。那个位必须设置为1。例如，如果过滤器位字段是00000000，结果是5，修改后的过滤器位字段是00000100(第一位是0位)。")]),e._v(" "),r("p",[e._v("It is expected that sometimes the same index number will be returned more than once when populating the bit field; this does not affect the algorithm—after a bit is set to 1, it is never changed back to 0.")]),e._v(" "),r("p",[e._v("预计在填充位域时，有时会返回相同的索引号不止一次，这不会影响算法ーー当一个位被设置为1后，就不会再被更改为0。")]),e._v(" "),r("p",[e._v("After all data elements have been added to the filter, each set of eight bits is converted into a little-endian byte. These bytes are the value of the "),r("em",[e._v("filter")]),e._v(" field.")]),e._v(" "),r("p",[e._v("将所有数据元素添加到过滤器后，每组八位将转换为一个小尾位字节。这些字节是筛选器字段的值。")]),e._v(" "),r("p",[r("strong",[e._v("Comparing Transaction Elements To A Bloom Filter")])]),e._v(" "),r("p",[e._v("事务元素与 Bloom 过滤器的比较")]),e._v(" "),r("p",[e._v("To compare an arbitrary data element against the bloom filter, it is hashed using the same parameters used to create the bloom filter. Specifically, it is hashed "),r("em",[e._v("nHashFuncs")]),e._v(" times, each time using the same "),r("em",[e._v("nTweak")]),e._v(" provided in the filter, and the resulting output is modulo the size of the bit field provided in the "),r("em",[e._v("filter")]),e._v(" field. After each hash is performed, the filter is checked to see if the bit at that indexed location is set. For example if the result of a hash is "),r("code",[e._v("5")]),e._v(" and the filter is "),r("code",[e._v("01001110")]),e._v(", the bit is considered set.")]),e._v(" "),r("p",[e._v("要将任意数据元素与 bloom 过滤器进行比较，需要使用用于创建 bloom 过滤器的相同参数对其进行散列。具体来说，它是 hashed nHashFuncs 时间，每次使用过滤器中提供的相同 nTweak，结果输出是过滤器字段中提供的位字段大小的模数。执行每个哈希后，将检查筛选器，以查看是否设置了该索引位置的位。例如，如果散列的结果为5，过滤器为01001110，则认为位已设置。")]),e._v(" "),r("p",[e._v("If the result of every hash points to a set bit, the filter matches. If any of the results points to an unset bit, the filter does not match.")]),e._v(" "),r("p",[e._v("如果每个散列的结果指向一个设置位，则过滤器匹配。如果任何结果指向未设置的位，则筛选器不匹配。")]),e._v(" "),r("p",[e._v("The following transaction elements are compared against bloom filters. All elements will be hashed in the byte order used in blocks (for example, TXIDs will be in internal byte order).")]),e._v(" "),r("p",[e._v("下面的事务元素将与 bloom 过滤器进行比较。所有元素将按块中使用的字节顺序散列(例如，txid 将按内部字节顺序散列)。")]),e._v(" "),r("ul",[r("li",[r("p",[r("strong",[e._v("TXIDs:")]),e._v(" the transaction’s SHA256(SHA256()) hash.")]),e._v(" "),r("p",[e._v("TXIDs: 事务的 SHA256(SHA256())散列。")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("Outpoints:")]),e._v(" each 36-byte outpoint used this transaction’s input section is individually compared to the filter.")]),e._v(" "),r("p",[e._v("出发点: 使用此事务的输入部分的每个36字节出发点都将单独与过滤器进行比较。")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("Signature Script Data:")]),e._v(" each element pushed onto the stack by a data-pushing opcode in a signature script from this transaction is individually compared to the filter. This includes data elements present in P2SH redeem scripts when they are being spent.")]),e._v(" "),r("p",[e._v("签名脚本数据(Signature Script Data) : 该事务的签名脚本中的数据推送操作码将每个元素推送到堆栈上，并与过滤器进行单独比较。这包括在使用 P2SH 赎回脚本时出现的数据元素。")])]),e._v(" "),r("li",[r("p",[r("strong",[e._v("PubKey Script Data:")]),e._v(" each element pushed onto the the stack by a data-pushing opcode in any pubkey script from this transaction is individually compared to the filter. (If a pubkey script element matches the filter, the filter will be immediately updated if the "),r("code",[e._v("BLOOM_UPDATE_ALL")]),e._v(" flag was set; if the pubkey script is in the P2PKH format and matches the filter, the filter will be immediately updated if the "),r("code",[e._v("BLOOM_UPDATE_P2PUBKEY_ONLY")]),e._v(" flag was set. See the subsection below for details.)")]),e._v(" "),r("p",[e._v("PubKey 脚本数据: 通过事务中的任何 PubKey 脚本中的数据推送操作码推送到堆栈上的每个元素都单独与过滤器进行比较。(如果一个 pubkey 脚本元素与过滤器匹配，那么如果设置了 BLOOM _ update _ all 标志，过滤器将立即更新; 如果 pubkey 脚本是 P2PKH 格式并与过滤器匹配，那么如果设置了 BLOOM _ update _ p2pubkey _ only 标志，过滤器将立即更新。详情请参阅下面的小节。)")])])]),e._v(" "),r("p",[e._v("The following annotated hexdump of a transaction is from the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/transactions.html#raw-transaction-format",target:"_blank",rel:"noopener noreferrer"}},[e._v("raw transaction format section"),r("OutboundLink")],1),e._v("; the elements which would be checked by the filter are emphasized in bold. Note that this transaction’s TXID ("),r("strong",[r("code",[e._v("01000000017b1eab[…]")])]),e._v(") would also be checked, and that the outpoint TXID and index number below would be checked as a single 36-byte element.")]),e._v(" "),r("p",[e._v("下面带注释的事务 hexdump 来自原始事务格式部分; 过滤器将检查的元素以粗体显示。注意，这个事务的 TXID (“0100000017b1eab [ ... ]”)也将被检查，下面的 outpoint TXID 和索引号将被检查为单个36字节的元素。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("01000000 ................................... Version\n\n01 ......................................... Number of inputs\n|\n| 7b1eabe0209b1fe794124575ef807057\n| c77ada2138ae4fa8d6c4de0398a14f3f ......... Outpoint TXID\n| 00000000 ................................. Outpoint index number\n|\n| 49 ....................................... Bytes in sig. script: 73\n| | 48 ..................................... Push 72 bytes as data\n| | | 30450221008949f0cb400094ad2b5eb3\n| | | 99d59d01c14d73d8fe6e96df1a7150de\n| | | b388ab8935022079656090d7f6bac4c9\n| | | a94e0aad311a4268e082a725f8aeae05\n| | | 73fb12ff866a5f01 ..................... Secp256k1 signature\n|\n| ffffffff ................................. Sequence number: UINT32_MAX\n\n01 ......................................... Number of outputs\n| f0ca052a01000000 ......................... Satoshis (49.99990000 BTC)\n|\n| 19 ....................................... Bytes in pubkey script: 25\n| | 76 ..................................... OP_DUP\n| | a9 ..................................... OP_HASH160\n| | 14 ..................................... Push 20 bytes as data\n| | | cbc20a7664f2f69e5355aa427045bc15\n| | | e7c6c772 ............................. PubKey hash\n| | 88 ..................................... OP_EQUALVERIFY\n| | ac ..................................... OP_CHECKSIG\n\n00000000 ................................... locktime: 0 (a block height)\n")])])]),r("p",[r("strong",[e._v("Updating A Bloom Filter")])]),e._v(" "),r("p",[e._v("更新 Bloom Filter")]),e._v(" "),r("p",[e._v("Clients will often want to track inputs that spend outputs (outpoints) relevant to their wallet, so the filterload field "),r("em",[e._v("nFlags")]),e._v(" can be set to allow the filtering node to update the filter when a match is found. When the filtering node sees a pubkey script that pays a pubkey, address, or other data element matching the filter, the filtering node immediately updates the filter with the outpoint corresponding to that pubkey script.")]),e._v(" "),r("p",[e._v("客户机通常希望跟踪与其钱包相关的输出(断点) ，因此可以设置 filterload 字段 nFlags，以允许筛选节点在找到匹配项时更新筛选器。当过滤节点看到一个 pubkey 脚本支付一个 pubkey、地址或其他与过滤器匹配的数据元素时，过滤节点立即用与该 pubkey 脚本对应的 outpoint 更新过滤器。")]),e._v(" "),r("p",[r("img",{staticClass:"lazy",attrs:{alt:"Automatically Updating Bloom Filters","data-src":"https://developer.bitcoin.org/_images/en-bloom-update.svg",loading:"lazy"}})]),e._v(" "),r("p",[e._v("Automatically Updating Bloom Filters"),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#id5",title:"Permalink to this image",target:"_blank",rel:"noopener noreferrer"}},[r("OutboundLink")],1)]),e._v(" "),r("p",[e._v("自动更新 Bloom Filters")]),e._v(" "),r("p",[e._v("If an input later spends that outpoint, the filter will match it, allowing the filtering node to tell the client that one of its transaction outputs has been spent.")]),e._v(" "),r("p",[e._v("如果输入稍后使用了该 outpoint，则过滤器将匹配该 outpoint，从而允许过滤节点告诉客户端它的一个事务输出已经使用。")]),e._v(" "),r("p",[e._v("The "),r("em",[e._v("nFlags")]),e._v(" field has three allowed values:")]),e._v(" "),r("p",[e._v("nFlags 字段有三个允许的值:")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Value价值")]),e._v(" "),r("th",[e._v("Name姓名")]),e._v(" "),r("th",[e._v("Description描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("0")]),e._v(" "),r("td",[e._v("BLOOM_UPDATE_NONE更新/更新/none")]),e._v(" "),r("td",[e._v("The filtering node should not update the filter.筛选节点不应更新筛选器。")])]),e._v(" "),r("tr",[r("td",[e._v("1")]),e._v(" "),r("td",[e._v("BLOOM_UPDATE_ALL更新所有")]),e._v(" "),r("td",[e._v("If the filter matches any data element in a pubkey script, the corresponding outpoint is added to the filter.如果筛选器匹配 pubkey 脚本中的任何数据元素，则将相应的输出点添加到筛选器中。")])]),e._v(" "),r("tr",[r("td",[e._v("2图2")]),e._v(" "),r("td",[e._v("BLOOM_UPDATE_P2PUBKEY_ONLY2pubkey only")]),e._v(" "),r("td",[e._v("If the filter matches any data element in a pubkey script and that script is either a P2PKH or non-P2SH pay-to-multisig script, the corresponding outpoint is added to the filter.如果过滤器匹配 pubkey 脚本中的任何数据元素，并且该脚本是 P2PKH 或非 p2sh pay-to-multisig 脚本，则将相应的输出点添加到过滤器中。")])])])]),e._v(" "),r("p",[e._v("In addition, because the filter size stays the same even though additional elements are being added to it, the false positive rate increases. Each false positive can result in another element being added to the filter, creating a feedback loop that can (after a certain point) make the filter useless. For this reason, clients using automatic filter updates need to monitor the actual false positive rate and send a new filter when the rate gets too high.")]),e._v(" "),r("p",[e._v("此外，由于过滤器大小保持不变，即使添加了其他元素，误报率也会增加。每一个假阳性都会导致另一个元素被加入到过滤器中，从而产生一个反馈循环，使得过滤器(在某一点之后)失效。因此，使用自动过滤器更新的客户端需要监视实际的误报率，并在误报率过高时发送一个新的过滤器。")]),e._v(" "),r("h3",{attrs:{id:"getaddr"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#getaddr"}},[e._v("#")]),e._v(" GetAddr")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getaddr",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getaddr")]),e._v(" message"),r("OutboundLink")],1),e._v(" requests an "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#addr",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("addr")]),e._v(" message"),r("OutboundLink")],1),e._v(" from the receiving node, preferably one with lots of IP addresses of other receiving nodes. The transmitting node can use those IP addresses to quickly update its database of available nodes rather than waiting for unsolicited "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#addr",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("addr")]),e._v(" messages"),r("OutboundLink")],1),e._v(" to arrive over time.")]),e._v(" "),r("p",[r("code",[e._v("getaddr")]),e._v("消息从接收节点请求一条"),r("code",[e._v("addr")]),e._v("消息，最好是一条具有其他接收节点大量 IP 地址的消息。发送节点可以使用这些 IP 地址快速更新可用节点的数据库，而不是等待未经请求的“"),r("code",[e._v("addr")]),e._v("息随时间到达。")]),e._v(" "),r("p",[e._v("There is no payload in a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#getaddr",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("getaddr")]),e._v(" message"),r("OutboundLink")],1),e._v(". See the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#message-headers",target:"_blank",rel:"noopener noreferrer"}},[e._v("message header section"),r("OutboundLink")],1),e._v(" for an example of a message without a payload.")]),e._v(" "),r("p",[r("code",[e._v("getaddr")]),e._v("消息中没有有效负载。有关无负载消息的示例，请参见消息头部分。")]),e._v(" "),r("h3",{attrs:{id:"ping"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ping"}},[e._v("#")]),e._v(" Ping")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#ping",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ping")]),e._v(" message"),r("OutboundLink")],1),e._v(" helps confirm that the receiving peer is still connected. If a TCP/IP error is encountered when sending the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#ping",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ping")]),e._v(" message"),r("OutboundLink")],1),e._v(" (such as a connection timeout), the transmitting node can assume that the receiving node is disconnected. The response to a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#ping",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ping")]),e._v(" message"),r("OutboundLink")],1),e._v(" is the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#pong",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("pong")]),e._v(" message"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[r("code",[e._v("ping")]),e._v("消息有助于确认接收端仍然连接。如果在发送“"),r("code",[e._v("ping")]),e._v("息时遇到 TCP/IP 错误(例如连接超时) ，发送节点可以假定接收节点已断开连接。对“ "),r("code",[e._v("ping")]),e._v("的响应是"),r("code",[e._v("pong")]),e._v("消息。")]),e._v(" "),r("p",[e._v("Before "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 60000"),r("OutboundLink")],1),e._v(", the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#ping",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ping")]),e._v(" message"),r("OutboundLink")],1),e._v(" had no payload. As of "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 60001"),r("OutboundLink")],1),e._v(" and all later versions, the message includes a single field, the nonce.")]),e._v(" "),r("p",[e._v("在协议版本60000之前，"),r("code",[e._v("ping")]),e._v("消息没有负载。在协议版本60001和所有更新版本中，消息包含一个字段 nonce。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Bytes字节")]),e._v(" "),r("th",[e._v("Name姓名")]),e._v(" "),r("th",[e._v("Data Type数据类型")]),e._v(" "),r("th",[e._v("Description描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("8图8")]),e._v(" "),r("td",[e._v("nonce现在")]),e._v(" "),r("td",[e._v("uint64_t64t")]),e._v(" "),r("td",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 60001"),r("OutboundLink")],1),r("em",[e._v("as described by")]),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0031.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP31"),r("OutboundLink")],1),r("em",[e._v(".")]),e._v(" Random nonce assigned to this "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#ping",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ping")]),e._v(" message"),r("OutboundLink")],1),e._v(". The responding "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#pong",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("pong")]),e._v(" message"),r("OutboundLink")],1),e._v(" will include this nonce to identify the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#ping",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ping")]),e._v(" message"),r("OutboundLink")],1),e._v(" to which it is replying.在协议版本60001中添加，如 bip31所描述。分配给这个"),r("code",[e._v("ping")]),e._v("消息的 Random nonce。响应的"),r("code",[e._v("pong")]),e._v("邮件将包含此 nonce，以标识它正在回复的“"),r("code",[e._v("ping")]),e._v("件。")])])])]),e._v(" "),r("p",[e._v("The annotated hexdump below shows a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#ping",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ping")]),e._v(" message"),r("OutboundLink")],1),e._v(". (The message header has been omitted.)")]),e._v(" "),r("p",[e._v("下面带注释的 hexdump 显示了一条"),r("code",[e._v("ping")]),e._v("消息(消息头被省略了。)")]),e._v(" "),r("p",[e._v("0094102111e2af4d ... Nonce")]),e._v(" "),r("h3",{attrs:{id:"pong"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pong"}},[e._v("#")]),e._v(" Pong")]),e._v(" "),r("p",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 60001"),r("OutboundLink")],1),r("em",[e._v("as described by")]),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0031.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP31"),r("OutboundLink")],1),r("em",[e._v(".")])]),e._v(" "),r("p",[e._v("在协议版本60001中添加，如 bip31所描述。")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#pong",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("pong")]),e._v(" message"),r("OutboundLink")],1),e._v(" replies to a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#ping",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ping")]),e._v(" message"),r("OutboundLink")],1),e._v(", proving to the pinging node that the ponging node is still alive. Bitcoin Core will, by default, disconnect from any clients which have not responded to a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#ping",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ping")]),e._v(" message"),r("OutboundLink")],1),e._v(" within 20 minutes.")]),e._v(" "),r("p",[r("code",[e._v("pong")]),e._v("消息回复"),r("code",[e._v("ping")]),e._v("消息，向 ping 节点证明 ponging 节点仍然活着。默认情况下，比特币核心将在20分钟内与任何没有回复“"),r("code",[e._v("ping")]),e._v("息的客户断开连接。")]),e._v(" "),r("p",[e._v("To allow nodes to keep track of latency, the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#pong",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("pong")]),e._v(" message"),r("OutboundLink")],1),e._v(" sends back the same nonce received in the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#ping",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ping")]),e._v(" message"),r("OutboundLink")],1),e._v(" it is replying to.")]),e._v(" "),r("p",[e._v("为了允许节点跟踪延迟，"),r("code",[e._v("pong")]),e._v("消息发回它正在回复的"),r("code",[e._v("ping")]),e._v("消息中收到的相同 nonce。")]),e._v(" "),r("p",[e._v("The format of the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#pong",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("pong")]),e._v(" message"),r("OutboundLink")],1),e._v(" is identical to the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#ping",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ping")]),e._v(" message"),r("OutboundLink")],1),e._v("; only the message header differs.")]),e._v(" "),r("p",[r("code",[e._v("pong")]),e._v("消息的格式与"),r("code",[e._v("ping")]),e._v("消息相同; 只是消息头不同。")]),e._v(" "),r("h3",{attrs:{id:"reject"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#reject"}},[e._v("#")]),e._v(" Reject")]),e._v(" "),r("p",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 70002"),r("OutboundLink")],1),r("em",[e._v("as described by")]),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0061.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP61"),r("OutboundLink")],1),r("em",[e._v(".")])]),e._v(" "),r("p",[e._v("在协议版本70002中添加了由 bip61描述的内容。")]),e._v(" "),r("p",[r("em",[e._v("Deprecated in Bitcoin Core 0.18.0.")])]),e._v(" "),r("p",[e._v("比特币核心0.18.0中的弃用。")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#reject",target:"_blank",rel:"noopener noreferrer"}},[e._v("“reject” message"),r("OutboundLink")],1),e._v(" informs the receiving node that one of its previous messages has been rejected.")]),e._v(" "),r("p",[e._v("“拒绝”消息通知接收节点其以前的消息之一已被拒绝。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Bytes字节")]),e._v(" "),r("th",[e._v("Name姓名")]),e._v(" "),r("th",[e._v("Data Type数据类型")]),e._v(" "),r("th",[e._v("Description描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("message bytes信息字节")]),e._v(" "),r("td",[e._v("compactSize uint紧凑型尺寸")]),e._v(" "),r("td",[e._v("The number of bytes in the following message field.下列消息字段中的字节数。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("message信息")]),e._v(" "),r("td",[e._v("string弦")]),e._v(" "),r("td",[e._v("The type of message rejected as ASCII text "),r("em",[e._v("without null padding")]),e._v(". For example: "),r("code",[e._v("tx")]),e._v(", "),r("code",[e._v("block")]),e._v(", or "),r("code",[e._v("version")]),e._v(".消息类型拒绝作为没有空填充的 ASCII 文本。例如: "),r("code",[e._v("tx")]),e._v("、"),r("code",[e._v("block")]),e._v("或"),r("code",[e._v("version")]),e._v("。")])]),e._v(" "),r("tr",[r("td",[e._v("1")]),e._v(" "),r("td",[e._v("code代码")]),e._v(" "),r("td",[e._v("char炭")]),e._v(" "),r("td",[e._v("The reject message code. See the table below.拒绝消息代码。请参见下表。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("reason bytes原因字节")]),e._v(" "),r("td",[e._v("compactSize uint紧凑型尺寸")]),e._v(" "),r("td",[e._v("The number of bytes in the following reason field. May be 0x00 if a text reason isn’t provided.以下原因字段中的字节数。如果没有提供文本原因，则可能为0x00。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("reason原因")]),e._v(" "),r("td",[e._v("string弦")]),e._v(" "),r("td",[e._v("The reason for the rejection in ASCII text. This should not be displayed to the user; it is only for debugging purposes.ASCII 文本中拒绝的原因。这不应该显示给用户; 它只是用于调试目的。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")]),e._v("不同")]),e._v(" "),r("td",[e._v("extra data额外数据")]),e._v(" "),r("td",[r("em",[e._v("varies")]),e._v("变化")]),e._v(" "),r("td",[e._v("Optional additional data provided with the rejection. For example, most rejections of "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#tx",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("tx")]),e._v(" messages"),r("OutboundLink")],1),e._v(" or "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#block",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("block")]),e._v(" messages"),r("OutboundLink")],1),e._v(" include the hash of the rejected transaction or block header. See the code table below.拒绝时提供的可选附加数据。例如，"),r("code",[e._v("tx")]),e._v("消息或"),r("code",[e._v("block")]),e._v("消息的大多数拒绝包括拒绝事务或块标头的散列。请参阅下面的代码表。")])])])]),e._v(" "),r("p",[e._v("The following table lists message reject codes. Codes are tied to the type of message they reply to; for example there is a 0x10 reject code for transactions and a 0x10 reject code for blocks.")]),e._v(" "),r("p",[e._v("下表列出了消息拒绝代码。代码与它们回复的消息类型绑定在一起; 例如，事务有一个0x10拒绝代码，块有一个0x10拒绝代码。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Code代码")]),e._v(" "),r("th",[e._v("In Reply To回覆")]),e._v(" "),r("th",[e._v("Extra Bytes额外字节")]),e._v(" "),r("th",[e._v("Extra Type额外类型")]),e._v(" "),r("th",[e._v("Description描述")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("0x01第一季，第1集")]),e._v(" "),r("td",[r("em",[e._v("any message")]),e._v("任何信息")]),e._v(" "),r("td",[e._v("0")]),e._v(" "),r("td",[e._v("N/A不适用")]),e._v(" "),r("td",[e._v("Message could not be decoded. Be careful of "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#reject",target:"_blank",rel:"noopener noreferrer"}},[e._v("“reject” message"),r("OutboundLink")],1),e._v("feedback loops where two peers each don’t understand each other’s "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#reject",target:"_blank",rel:"noopener noreferrer"}},[e._v("“reject” messages"),r("OutboundLink")],1),e._v(" and so keep sending them back and forth forever.无法解码信息。要小心“拒绝”消息反馈循环，其中两个对等点彼此都不理解对方的“拒绝”消息，因此不断地来回发送它们。")])]),e._v(" "),r("tr",[r("td",[e._v("0x10第一季，第10集")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#block",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("block")]),e._v(" message"),r("OutboundLink")],1),e._v("”屏蔽”信息")]),e._v(" "),r("td",[e._v("32图32")]),e._v(" "),r("td",[e._v("char[32][32]")]),e._v(" "),r("td",[e._v("Block is invalid for some reason (invalid proof-of-work, invalid signature, etc). Extra data may include the rejected block’s header hash.块由于某些原因无效(无效的工作证明、无效的签名等)。额外的数据可能包括被拒绝块的头散列。")])]),e._v(" "),r("tr",[r("td",[e._v("0x10第一季，第10集")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#tx",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("tx")]),e._v(" message"),r("OutboundLink")],1),r("code",[e._v("tx")]),e._v("留言")]),e._v(" "),r("td",[e._v("32图32")]),e._v(" "),r("td",[e._v("char[32][32]")]),e._v(" "),r("td",[e._v("Transaction is invalid for some reason (invalid signature, output value greater than input, etc.). Extra data may include the rejected transaction’s TXID.事务由于某种原因无效(签名无效、输出值大于输入等)。额外的数据可能包括被拒绝事务的 TXID。")])]),e._v(" "),r("tr",[r("td",[e._v("0x11第一季，第11集")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#block",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("block")]),e._v(" message"),r("OutboundLink")],1),e._v("”屏蔽”信息")]),e._v(" "),r("td",[e._v("32图32")]),e._v(" "),r("td",[e._v("char[32][32]")]),e._v(" "),r("td",[e._v("The block uses a version that is no longer supported. Extra data may include the rejected block’s header hash.该块使用不再支持的版本。额外的数据可能包括被拒绝块的标题散列。")])]),e._v(" "),r("tr",[r("td",[e._v("0x11第一季，第11集")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#version",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("version")]),e._v(" message"),r("OutboundLink")],1),e._v("”版本”信息")]),e._v(" "),r("td",[e._v("0")]),e._v(" "),r("td",[e._v("N/A不适用")]),e._v(" "),r("td",[e._v("Connecting node is using a protocol version that the rejecting node considers obsolete and unsupported.连接节点正在使用被拒绝节点认为已过时和不受支持的协议版本。")])]),e._v(" "),r("tr",[r("td",[e._v("0x12第一季，第12集")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#tx",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("tx")]),e._v(" message"),r("OutboundLink")],1),r("code",[e._v("tx")]),e._v("留言")]),e._v(" "),r("td",[e._v("32图32")]),e._v(" "),r("td",[e._v("char[32][32]")]),e._v(" "),r("td",[e._v("Duplicate input spend (double spend): the rejected transaction spends the same input as a previously-received transaction. Extra data may include the rejected transaction’s TXID.重复输入开销(重复开销) : 被拒绝的事务花费的输入与以前接收的事务相同。额外的数据可能包括被拒绝事务的 TXID。")])]),e._v(" "),r("tr",[r("td",[e._v("0x12第一季，第12集")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#version",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("version")]),e._v(" message"),r("OutboundLink")],1),e._v("”版本”信息")]),e._v(" "),r("td",[e._v("0")]),e._v(" "),r("td",[e._v("N/A不适用")]),e._v(" "),r("td",[e._v("More than one "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#version",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("version")]),e._v(" message"),r("OutboundLink")],1),e._v(" received in this connection.在此连接中接收到多个“版本”消息。")])]),e._v(" "),r("tr",[r("td",[e._v("0x40")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#tx",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("tx")]),e._v(" message"),r("OutboundLink")],1),r("code",[e._v("tx")]),e._v("留言")]),e._v(" "),r("td",[e._v("32图32")]),e._v(" "),r("td",[e._v("char[32][32]")]),e._v(" "),r("td",[e._v("The transaction will not be mined or relayed because the rejecting node considers it non-standard—a transaction type or version unknown by the server. Extra data may include the rejected transaction’s TXID.由于拒绝节点认为事务类型或版本不为服务器所知，因此事务不会被挖掘或中转。额外的数据可能包括被拒绝事务的 TXID。")])]),e._v(" "),r("tr",[r("td",[e._v("0x41")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#tx",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("tx")]),e._v(" message"),r("OutboundLink")],1),r("code",[e._v("tx")]),e._v("留言")]),e._v(" "),r("td",[e._v("32图32")]),e._v(" "),r("td",[e._v("char[32][32]")]),e._v(" "),r("td",[e._v("One or more output amounts are below the dust threshold. Extra data may include the rejected transaction’s TXID.一个或多个输出量低于尘埃阈值。额外的数据可能包括被拒绝事务的 TXID。")])]),e._v(" "),r("tr",[r("td",[e._v("0x42")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#tx",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("tx")]),e._v(" message"),r("OutboundLink")],1),r("code",[e._v("tx")]),e._v("留言")]),e._v(" "),r("td"),e._v(" "),r("td",[e._v("char[32][32]")]),e._v(" "),r("td",[e._v("The transaction did not have a large enough fee or priority to be relayed or mined. Extra data may include the rejected transaction’s TXID.这项交易没有足够大的费用或优先权来进行中继或监听。额外的数据可能包括被拒绝事务的 TXID。")])]),e._v(" "),r("tr",[r("td",[e._v("0x43")]),e._v(" "),r("td",[r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#block",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("block")]),e._v(" message"),r("OutboundLink")],1),e._v("”屏蔽”信息")]),e._v(" "),r("td",[e._v("32图32")]),e._v(" "),r("td",[e._v("char[32][32]")]),e._v(" "),r("td",[e._v("The block belongs to a block chain which is not the same block chain as provided by a compiled-in checkpoint. Extra data may include the rejected block’s header hash.该块属于一个块链，该块链与编译入检查点提供的块链不同。额外的数据可能包括被拒绝块的标题散列。")])])])]),e._v(" "),r("p",[e._v("The annotated hexdump below shows a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#reject",target:"_blank",rel:"noopener noreferrer"}},[e._v("“reject” message"),r("OutboundLink")],1),e._v(". (The message header has been omitted.)")]),e._v(" "),r("p",[e._v("下面带注释的 hexdump 显示了一个“ reject”消息(消息头被省略了。)")]),e._v(" "),r("p",[e._v("02 ................................. Number of bytes in message: 2\n7478 ............................... Type of message rejected: tx\n12 ................................. Reject code: 0x12 (duplicate)\n15 ................................. Number of bytes in reason: 21\n6261642d74786e732d696e707574732d\n7370656e74 ......................... Reason: bad-txns-inputs-spent\n394715fcab51093be7bfca5a31005972\n947baf86a31017939575fb2354222821 ... TXID")]),e._v(" "),r("h3",{attrs:{id:"sendheaders"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sendheaders"}},[e._v("#")]),e._v(" SendHeaders")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#sendheaders",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("sendheaders")]),e._v(" message"),r("OutboundLink")],1),e._v(" tells the receiving peer to send new block announcements using a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#headers",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("headers")]),e._v(" message"),r("OutboundLink")],1),e._v(" rather than an "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#inv",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("inv")]),e._v(" message"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[r("code",[e._v("sendheaders")]),e._v("消息告诉接收端使用"),r("code",[e._v("headers")]),e._v("消息而不是"),r("code",[e._v("inv")]),e._v("消息发送新的块公告。")]),e._v(" "),r("p",[e._v("There is no payload in a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#sendheaders",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("sendheaders")]),e._v(" message"),r("OutboundLink")],1),e._v(". See the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#message-headers",target:"_blank",rel:"noopener noreferrer"}},[e._v("message header section"),r("OutboundLink")],1),e._v(" for an example of a message without a payload.")]),e._v(" "),r("p",[r("code",[e._v("sendheaders")]),e._v("消息中没有有效负载。有关无负载消息的示例，请参见消息头部分。")]),e._v(" "),r("h3",{attrs:{id:"verack"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#verack"}},[e._v("#")]),e._v(" VerAck")]),e._v(" "),r("p",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 209"),r("OutboundLink")],1),r("em",[e._v(".")])]),e._v(" "),r("p",[e._v("增加了协议版本209。")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#verack",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("verack")]),e._v(" message"),r("OutboundLink")],1),e._v(" acknowledges a previously-received "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#version",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("version")]),e._v(" message"),r("OutboundLink")],1),e._v(", informing the connecting node that it can begin to send other messages. The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#verack",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("verack")]),e._v(" message"),r("OutboundLink")],1),e._v(" has no payload; for an example of a message with no payload, see the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#message-headers",target:"_blank",rel:"noopener noreferrer"}},[e._v("message headers section"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[r("code",[e._v("verack")]),e._v("消息确认以前收到的"),r("code",[e._v("version")]),e._v("消息，通知连接节点它可以开始发送其他消息。“"),r("code",[e._v("verack")]),e._v("息没有有效负载; 有关没有有效负载的消息的示例，请参阅消息头部分。")]),e._v(" "),r("h3",{attrs:{id:"version"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#version"}},[e._v("#")]),e._v(" Version")]),e._v(" "),r("p",[e._v("The "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#version",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("version")]),e._v(" message"),r("OutboundLink")],1),e._v(" provides information about the transmitting node to the receiving node at the beginning of a connection. Until both peers have exchanged "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#version",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("version")]),e._v(" messages"),r("OutboundLink")],1),e._v(", no other messages will be accepted.")]),e._v(" "),r("p",[e._v("“版本”消息在连接开始时向接收节点提供有关发送节点的信息。在两个对等点交换“版本”消息之前，不会接受其他消息。")]),e._v(" "),r("p",[e._v("If a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#version",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("version")]),e._v(" message"),r("OutboundLink")],1),e._v(" is accepted, the receiving node should send a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#verack",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("verack")]),e._v(" message"),r("OutboundLink")],1),e._v("—but no node should send a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#verack",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("verack")]),e._v(" message"),r("OutboundLink")],1),e._v(" before initializing its half of the connection by first sending a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#version",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("version")]),e._v(" message"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("如果一个"),r("code",[e._v("version")]),e._v("消息被接受，接收节点应该发送一个"),r("code",[e._v("verack")]),e._v("消息ー但是任何节点在初始化它的一半连接之前都不应该发送一个“"),r("code",[e._v("version")]),e._v("息。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Bytes")]),e._v(" "),r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Data Type")]),e._v(" "),r("th",[e._v("Required/Optional")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("4")]),e._v(" "),r("td",[e._v("version")]),e._v(" "),r("td",[e._v("int32")]),e._v(" "),r("td",[e._v("Required")]),e._v(" "),r("td",[e._v("The highest protocol version understood by the transmitting node. See the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version section"),r("OutboundLink")],1),e._v(".传输节点可以理解的最高协议版本。请参阅协议版本部分。")])]),e._v(" "),r("tr",[r("td",[e._v("8")]),e._v(" "),r("td",[e._v("services")]),e._v(" "),r("td",[e._v("uint64")]),e._v(" "),r("td",[e._v("Required")]),e._v(" "),r("td",[e._v("The services supported by the transmitting node encoded as a bitfield. See the list of service codes below.传输节点支持的服务被编码为位字段。请参阅下面的服务代码列表。")])]),e._v(" "),r("tr",[r("td",[e._v("8")]),e._v(" "),r("td",[e._v("timestamp")]),e._v(" "),r("td",[e._v("int64")]),e._v(" "),r("td",[e._v("Required")]),e._v(" "),r("td",[e._v("The current "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Unix_time",target:"_blank",rel:"noopener noreferrer"}},[e._v("Unix epoch time"),r("OutboundLink")],1),e._v(" according to the transmitting node’s clock. Because nodes will reject blocks with timestamps more than two hours in the future, this field can help other nodes to determine that their clock is wrong.根据传输节点的时钟计算当前 Unix 新纪元的时间。因为节点在将来会拒绝时间戳超过两个小时的块，所以这个字段可以帮助其他节点确定他们的时钟是错误的。")])]),e._v(" "),r("tr",[r("td",[e._v("8")]),e._v(" "),r("td",[e._v("addr_recv services")]),e._v(" "),r("td",[e._v("uint64")]),e._v(" "),r("td",[e._v("Required")]),e._v(" "),r("td",[e._v("The services supported by the receiving node as perceived by the transmitting node. Same format as the ‘services’ field above. Bitcoin Core will attempt to provide accurate information. "),r("a",{attrs:{href:"http://bitcoinj.github.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("BitcoinJ"),r("OutboundLink")],1),e._v("will, by default, always send 0.发送节点感知到的接收节点所支持的服务。与上面的“服务”字段的格式相同。比特币核心将试图提供准确的信息。默认情况下，BitcoinJ 总是发送0。")])]),e._v(" "),r("tr",[r("td",[e._v("16")]),e._v(" "),r("td",[e._v("addr_recv IP address")]),e._v(" "),r("td",[e._v("char[16]")]),e._v(" "),r("td",[e._v("Required")]),e._v(" "),r("td",[e._v("The IPv6 address of the receiving node as perceived by the transmitting node in "),r("strong",[e._v("big endian byte order")]),e._v(". IPv4 addresses can be provided as "),r("a",{attrs:{href:"http://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses",target:"_blank",rel:"noopener noreferrer"}},[e._v("IPv4-mapped IPv6 addresses"),r("OutboundLink")],1),e._v(". Bitcoin Core will attempt to provide accurate information. "),r("a",{attrs:{href:"http://bitcoinj.github.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("BitcoinJ"),r("OutboundLink")],1),e._v("will, by default, always return ::ffff:127.0.0.1发送节点感知到的接收节点的 IPv6地址，大端字节顺序。IPv4地址可以作为 IPv4-映射的 IPv6地址提供。比特币核心将试图提供准确的信息。在默认情况下，BitcoinJ 总是返回: : 127.0.0.0.1")])]),e._v(" "),r("tr",[r("td",[e._v("2")]),e._v(" "),r("td",[e._v("addr_recv port")]),e._v(" "),r("td",[e._v("uint16")]),e._v(" "),r("td",[e._v("Required")]),e._v(" "),r("td",[e._v("The port number of the receiving node as perceived by the transmitting node in "),r("strong",[e._v("big endian byte order")]),e._v(".发送节点感知到的接收节点的端口号，以大尾数字节顺序排列。")])]),e._v(" "),r("tr",[r("td",[e._v("8")]),e._v(" "),r("td",[e._v("addr_trans services")]),e._v(" "),r("td",[e._v("uint64")]),e._v(" "),r("td",[e._v("Required")]),e._v(" "),r("td",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 106"),r("OutboundLink")],1),r("em",[e._v(".")]),e._v(" The services supported by the transmitting node. Should be identical to the ‘services’ field above.在协议版本106中添加。传输节点支持的服务。应该与上面的“服务”字段相同。")])]),e._v(" "),r("tr",[r("td",[e._v("16")]),e._v(" "),r("td",[e._v("addr_trans IP address")]),e._v(" "),r("td",[e._v("char[16]")]),e._v(" "),r("td",[e._v("Required")]),e._v(" "),r("td",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 106"),r("OutboundLink")],1),r("em",[e._v(".")]),e._v(" The IPv6 address of the transmitting node in "),r("strong",[e._v("big endian byte order")]),e._v(". IPv4 addresses can be provided as "),r("a",{attrs:{href:"http://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses",target:"_blank",rel:"noopener noreferrer"}},[e._v("IPv4-mapped IPv6 addresses"),r("OutboundLink")],1),e._v(". Set to ::ffff:127.0.0.1 if unknown.在协议版本106中添加。传输节点 IPv6地址的大端字节顺序。IPv4地址可以作为 IPv4-映射的 IPv6地址提供。设置为: : ffff: 127.0.0.1，如果未知。")])]),e._v(" "),r("tr",[r("td",[e._v("2")]),e._v(" "),r("td",[e._v("addr_trans port")]),e._v(" "),r("td",[e._v("uint16")]),e._v(" "),r("td",[e._v("Required")]),e._v(" "),r("td",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 106"),r("OutboundLink")],1),r("em",[e._v(".")]),e._v(" The port number of the transmitting node in "),r("strong",[e._v("big endian byte order")]),e._v(".在协议版本106中增加。传输节点的端口号以大端字节顺序排列。")])]),e._v(" "),r("tr",[r("td",[e._v("8")]),e._v(" "),r("td",[e._v("nonce")]),e._v(" "),r("td",[e._v("uint64")]),e._v(" "),r("td",[e._v("Required")]),e._v(" "),r("td",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 106"),r("OutboundLink")],1),r("em",[e._v(".")]),e._v(" A random nonce which can help a node detect a connection to itself. If the nonce is 0, the nonce field is ignored. If the nonce is anything else, a node should terminate the connection on receipt of a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#version",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("version")]),e._v(" message"),r("OutboundLink")],1),e._v("with a nonce it previously sent.在协议版本106中添加。一个可以帮助节点检测到自身连接的随机 nonce。如果 nonce 为0，则忽略 nonce 字段。如果 nonce 是其他任何东西，那么节点应该在收到"),r("code",[e._v("version")]),e._v("消息时终止连接，并在此前发送 nonce 消息。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")])]),e._v(" "),r("td",[e._v("user_agent bytes")]),e._v(" "),r("td",[e._v("compactSize uint")]),e._v(" "),r("td",[e._v("Required")]),e._v(" "),r("td",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 106"),r("OutboundLink")],1),r("em",[e._v(".")]),e._v(" Number of bytes in following user_agent field. If 0x00, no user agent field is sent.在协议版本106中添加。在下面的 user _ agent 字段中的字节数。如果是0x00，则不发送用户代理字段。")])]),e._v(" "),r("tr",[r("td",[r("em",[e._v("Varies")])]),e._v(" "),r("td",[e._v("user_agent")]),e._v(" "),r("td",[e._v("string")]),e._v(" "),r("td",[e._v("Required if user_agent bytes > 0如果用户 _ 代理字节 > 0，则需要")]),e._v(" "),r("td",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 106"),r("OutboundLink")],1),r("em",[e._v(". Renamed in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 60000"),r("OutboundLink")],1),r("em",[e._v(".")]),e._v(" User agent as defined by "),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0014.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP14"),r("OutboundLink")],1),e._v(". Previously called subVer.在协议版本106中添加。在协议版本60000中重命名。用户代理由 BIP14定义。以前称为 subVer。")])]),e._v(" "),r("tr",[r("td",[e._v("4")]),e._v(" "),r("td",[e._v("start_height")]),e._v(" "),r("td",[e._v("int32")]),e._v(" "),r("td",[e._v("Required")]),e._v(" "),r("td",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 209"),r("OutboundLink")],1),r("em",[e._v(".")]),e._v(" The height of the transmitting node’s best block chain or, in the case of an SPV client, best block header chain.增加了协议版本209。发送节点的最佳块链的高度，或者在 SPV 客户端的情况下，最佳块头链的高度。")])]),e._v(" "),r("tr",[r("td",[e._v("1")]),e._v(" "),r("td",[e._v("relay")]),e._v(" "),r("td",[e._v("bool")]),e._v(" "),r("td",[e._v("Optional")]),e._v(" "),r("td",[r("em",[e._v("Added in")]),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("protocol version 70001"),r("OutboundLink")],1),r("em",[e._v("as described by")]),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP37"),r("OutboundLink")],1),r("em",[e._v(".")]),e._v(" Transaction relay flag. If 0x00, no "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#inv",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("inv")]),e._v(" messages"),r("OutboundLink")],1),e._v(" or "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#tx",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("tx")]),e._v(" messages"),r("OutboundLink")],1),e._v(" announcing new transactions should be sent to this client until it sends a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#filterload",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("filterload")]),e._v(" message"),r("OutboundLink")],1),e._v(" or "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#filterclear",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("filterclear")]),e._v(" message"),r("OutboundLink")],1),e._v(". If the relay field is not present or is set to 0x01, this node wants "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#inv",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("inv")]),e._v(" messages"),r("OutboundLink")],1),e._v(" and "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#tx",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("tx")]),e._v(" messages"),r("OutboundLink")],1),e._v(" announcing new transactions.增加了协议版本70001，如 bip37所描述。事务中继标志。如果是0x00，在该客户端发送"),r("code",[e._v("filterload")]),e._v("消息或"),r("code",[e._v("filterclear")]),e._v("消息之前，不应向该客户端发送宣布新事务的"),r("code",[e._v("inv")]),e._v("消息或"),r("code",[e._v("tx")]),e._v("消息。如果中继字段不存在或设置为0x01，则该节点需要“"),r("code",[e._v("inv")]),e._v("息和“"),r("code",[e._v("tx")]),e._v("息来宣布新的事务。")])])])]),e._v(" "),r("p",[e._v("The following service identifiers have been assigned.")]),e._v(" "),r("p",[e._v("分配了以下服务标识符。")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Value")]),e._v(" "),r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("0x00")]),e._v(" "),r("td",[r("em",[e._v("Unnamed")]),e._v("未命名的")]),e._v(" "),r("td",[e._v("This node is not a full node. It may not be able to provide any data except for the transactions it originates.此节点不是完整的节点。它可能不能提供任何数据，除非它发起的事务。")])]),e._v(" "),r("tr",[r("td",[e._v("0x01")]),e._v(" "),r("td",[e._v("NODE_NETWORK节点网络")]),e._v(" "),r("td",[e._v("This is a full node and can be asked for full blocks. It should implement all protocol features available in its self-reported protocol version.这是一个完整的节点，可以请求完整的块。它应该实现其自我报告的协议版本中可用的所有协议特性。")])]),e._v(" "),r("tr",[r("td",[e._v("0x02")]),e._v(" "),r("td",[e._v("NODE_GETUTXO节点/getutxo")]),e._v(" "),r("td",[e._v("This is a full node capable of responding to the getutxo protocol request. This is not supported by any currently-maintained Bitcoin node. See "),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0064.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP64"),r("OutboundLink")],1),e._v(" for details on how this is implemented.这是一个能够响应 getutxo 协议请求的完整节点。这不支持任何目前维护的比特币节点。有关如何实现的详细信息，请参阅 BIP64。")])]),e._v(" "),r("tr",[r("td",[e._v("0x04")]),e._v(" "),r("td",[e._v("NODE_BLOOM节点布鲁姆")]),e._v(" "),r("td",[e._v("This is a full node capable and willing to handle bloom-filtered connections. See "),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP111"),r("OutboundLink")],1),e._v(" for details.这是一个能够并且愿意处理开花过滤连接的完整节点。详细信息请参阅 BIP111。")])]),e._v(" "),r("tr",[r("td",[e._v("0x08")]),e._v(" "),r("td",[e._v("NODE_WITNESS节点目击者")]),e._v(" "),r("td",[e._v("This is a full node that can be asked for blocks and transactions including witness data. See "),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0144.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP144"),r("OutboundLink")],1),e._v(" for details.这是一个完整的节点，可以请求它提供包括见证数据在内的块和事务。")])]),e._v(" "),r("tr",[r("td",[e._v("0x10")]),e._v(" "),r("td",[e._v("NODE_XTHIN节点 xthin")]),e._v(" "),r("td",[e._v("This is a full node that supports Xtreme Thinblocks. This is not supported by any currently-maintained Bitcoin node.这是一个支持 Xtreme Thinblocks 的完整节点，目前任何维护的比特币节点都不支持它。")])]),e._v(" "),r("tr",[r("td",[e._v("0x0400")]),e._v(" "),r("td",[e._v("NODE_NETWORK_LIMITED节点网络")]),e._v(" "),r("td",[e._v("This is the same as NODE_NETWORK but the node has at least the last 288 blocks (last 2 days). See "),r("a",{attrs:{href:"https://github.com/bitcoin/bips/blob/master/bip-0159.mediawiki",target:"_blank",rel:"noopener noreferrer"}},[e._v("BIP159"),r("OutboundLink")],1),e._v(" for details on how this is implemented.这与 NODE _ network 相同，但是该节点至少有最近的288个块(最后2天)。有关如何实施的详细信息，请参阅 BIP159。")])])])]),e._v(" "),r("p",[r("strong",[e._v("Note:")]),e._v(" "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#protocol-versions",target:"_blank",rel:"noopener noreferrer"}},[e._v("Protocol version 70001"),r("OutboundLink")],1),e._v(" introduced the optional "),r("code",[e._v("relay")]),e._v(" field, adding the possibility of an additional byte to the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#version",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("version")]),e._v(" message"),r("OutboundLink")],1),e._v(". This introduces an incompatibility with implementations of lower protocol versions which validate the "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#version",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("version")]),e._v(" message"),r("OutboundLink")],1),e._v(" size. When implementing support for protocol versions less than 70001 you may want to handle the case of a peer potentially sending an extra byte, treating it as invalid only in the case of a requested protocol version less than 70001.")]),e._v(" "),r("p",[e._v("注意: Protocol version 70001引入了可选的中继字段，为"),r("code",[e._v("version")]),e._v("消息增加了一个附加字节的可能性。这将导致与验证“版本”消息大小的低协议版本的实现不兼容。当实现对小于70001的协议版本的支持时，您可能希望处理对方可能发送一个额外字节的情况，只有在请求的协议版本小于70001的情况下才将其视为无效。")]),e._v(" "),r("p",[e._v("The following annotated hexdump shows a "),r("a",{attrs:{href:"https://developer.bitcoin.org/reference/p2p_networking.html#version",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("version")]),e._v(" message"),r("OutboundLink")],1),e._v(". (The message header has been omitted and the actual IP addresses have been replaced with "),r("a",{attrs:{href:"http://tools.ietf.org/html/rfc5737",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC5737"),r("OutboundLink")],1),e._v(" reserved IP addresses.)")]),e._v(" "),r("p",[e._v("下面带注释的 hexdump 显示了一条"),r("code",[e._v("version")]),e._v("消息。(消息头被省略，实际 IP 地址已被 RFC5737保留 IP 地址替换。)")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("72110100 ........................... Protocol version: 70002\n0100000000000000 ................... Services: NODE_NETWORK\nbc8f5e5400000000 ................... [Epoch time][unix epoch time]: 1415483324\n0100000000000000 ................... Receiving node's services\n00000000000000000000ffffc61b6409 ... Receiving node's IPv6 address\n208d ............................... Receiving node's port number\n0100000000000000 ................... Transmitting node's services\n00000000000000000000ffffcb0071c0 ... Transmitting node's IPv6 address\n208d ............................... Transmitting node's port number\n128035cbc97953f8 ................... Nonce\n0f ................................. Bytes in user agent string: 15\n2f5361746f7368693a302e392e332f ..... User agent: /Satoshi:0.9.3/\ncf050500 ........................... Start height: 329167\n01 ................................. Relay flag: true\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);